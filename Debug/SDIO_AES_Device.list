
SDIO_AES_Device.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000194  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00001300  080001a0  080001a0  000101a0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       0000050c  080014a0  080014a0  000114a0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  080019ac  080019ac  0002005c  2**0
                  CONTENTS
  4 .ARM          00000000  080019ac  080019ac  0002005c  2**0
                  CONTENTS
  5 .preinit_array 00000000  080019ac  080019ac  0002005c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080019ac  080019ac  000119ac  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  080019b0  080019b0  000119b0  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         0000005c  20000000  080019b4  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000016c  2000005c  08001a10  0002005c  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  200001c8  08001a10  000201c8  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  0002005c  2**0
                  CONTENTS, READONLY
 12 .comment      00000043  00000000  00000000  0002008c  2**0
                  CONTENTS, READONLY
 13 .debug_info   00000ed8  00000000  00000000  000200cf  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 0000052c  00000000  00000000  00020fa7  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 000001b8  00000000  00000000  000214d8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_rnglists 00000127  00000000  00000000  00021690  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  0000e3a7  00000000  00000000  000217b7  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   0000292c  00000000  00000000  0002fb5e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    00055407  00000000  00000000  0003248a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_frame  00000cd4  00000000  00000000  00087894  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 0000007d  00000000  00000000  00088568  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001a0 <__do_global_dtors_aux>:
 80001a0:	b510      	push	{r4, lr}
 80001a2:	4c05      	ldr	r4, [pc, #20]	; (80001b8 <__do_global_dtors_aux+0x18>)
 80001a4:	7823      	ldrb	r3, [r4, #0]
 80001a6:	b933      	cbnz	r3, 80001b6 <__do_global_dtors_aux+0x16>
 80001a8:	4b04      	ldr	r3, [pc, #16]	; (80001bc <__do_global_dtors_aux+0x1c>)
 80001aa:	b113      	cbz	r3, 80001b2 <__do_global_dtors_aux+0x12>
 80001ac:	4804      	ldr	r0, [pc, #16]	; (80001c0 <__do_global_dtors_aux+0x20>)
 80001ae:	f3af 8000 	nop.w
 80001b2:	2301      	movs	r3, #1
 80001b4:	7023      	strb	r3, [r4, #0]
 80001b6:	bd10      	pop	{r4, pc}
 80001b8:	2000005c 	.word	0x2000005c
 80001bc:	00000000 	.word	0x00000000
 80001c0:	08001488 	.word	0x08001488

080001c4 <frame_dummy>:
 80001c4:	b508      	push	{r3, lr}
 80001c6:	4b03      	ldr	r3, [pc, #12]	; (80001d4 <frame_dummy+0x10>)
 80001c8:	b11b      	cbz	r3, 80001d2 <frame_dummy+0xe>
 80001ca:	4903      	ldr	r1, [pc, #12]	; (80001d8 <frame_dummy+0x14>)
 80001cc:	4803      	ldr	r0, [pc, #12]	; (80001dc <frame_dummy+0x18>)
 80001ce:	f3af 8000 	nop.w
 80001d2:	bd08      	pop	{r3, pc}
 80001d4:	00000000 	.word	0x00000000
 80001d8:	20000060 	.word	0x20000060
 80001dc:	08001488 	.word	0x08001488

080001e0 <memchr>:
 80001e0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80001e4:	2a10      	cmp	r2, #16
 80001e6:	db2b      	blt.n	8000240 <memchr+0x60>
 80001e8:	f010 0f07 	tst.w	r0, #7
 80001ec:	d008      	beq.n	8000200 <memchr+0x20>
 80001ee:	f810 3b01 	ldrb.w	r3, [r0], #1
 80001f2:	3a01      	subs	r2, #1
 80001f4:	428b      	cmp	r3, r1
 80001f6:	d02d      	beq.n	8000254 <memchr+0x74>
 80001f8:	f010 0f07 	tst.w	r0, #7
 80001fc:	b342      	cbz	r2, 8000250 <memchr+0x70>
 80001fe:	d1f6      	bne.n	80001ee <memchr+0xe>
 8000200:	b4f0      	push	{r4, r5, r6, r7}
 8000202:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000206:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800020a:	f022 0407 	bic.w	r4, r2, #7
 800020e:	f07f 0700 	mvns.w	r7, #0
 8000212:	2300      	movs	r3, #0
 8000214:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000218:	3c08      	subs	r4, #8
 800021a:	ea85 0501 	eor.w	r5, r5, r1
 800021e:	ea86 0601 	eor.w	r6, r6, r1
 8000222:	fa85 f547 	uadd8	r5, r5, r7
 8000226:	faa3 f587 	sel	r5, r3, r7
 800022a:	fa86 f647 	uadd8	r6, r6, r7
 800022e:	faa5 f687 	sel	r6, r5, r7
 8000232:	b98e      	cbnz	r6, 8000258 <memchr+0x78>
 8000234:	d1ee      	bne.n	8000214 <memchr+0x34>
 8000236:	bcf0      	pop	{r4, r5, r6, r7}
 8000238:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800023c:	f002 0207 	and.w	r2, r2, #7
 8000240:	b132      	cbz	r2, 8000250 <memchr+0x70>
 8000242:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000246:	3a01      	subs	r2, #1
 8000248:	ea83 0301 	eor.w	r3, r3, r1
 800024c:	b113      	cbz	r3, 8000254 <memchr+0x74>
 800024e:	d1f8      	bne.n	8000242 <memchr+0x62>
 8000250:	2000      	movs	r0, #0
 8000252:	4770      	bx	lr
 8000254:	3801      	subs	r0, #1
 8000256:	4770      	bx	lr
 8000258:	2d00      	cmp	r5, #0
 800025a:	bf06      	itte	eq
 800025c:	4635      	moveq	r5, r6
 800025e:	3803      	subeq	r0, #3
 8000260:	3807      	subne	r0, #7
 8000262:	f015 0f01 	tst.w	r5, #1
 8000266:	d107      	bne.n	8000278 <memchr+0x98>
 8000268:	3001      	adds	r0, #1
 800026a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800026e:	bf02      	ittt	eq
 8000270:	3001      	addeq	r0, #1
 8000272:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000276:	3001      	addeq	r0, #1
 8000278:	bcf0      	pop	{r4, r5, r6, r7}
 800027a:	3801      	subs	r0, #1
 800027c:	4770      	bx	lr
 800027e:	bf00      	nop

08000280 <DisplayBanner>:
#include "Banner.h"

void DisplayBanner(void)
{
 8000280:	b580      	push	{r7, lr}
 8000282:	af00      	add	r7, sp, #0
	printf("####################################################################################\r\n");
 8000284:	480e      	ldr	r0, [pc, #56]	; (80002c0 <DisplayBanner+0x40>)
 8000286:	f000 fa95 	bl	80007b4 <puts>
	printf("#                ______   _____                                 _____   ____       #\r\n");
 800028a:	480e      	ldr	r0, [pc, #56]	; (80002c4 <DisplayBanner+0x44>)
 800028c:	f000 fa92 	bl	80007b4 <puts>
	printf("#         /\    |  ____| / ____|                               |_   _| / __ \      #\r\n");
 8000290:	480d      	ldr	r0, [pc, #52]	; (80002c8 <DisplayBanner+0x48>)
 8000292:	f000 fa8f 	bl	80007b4 <puts>
	printf("#        /  \   | |__   | (___    ___   ___  _   _  _ __   ___   | |  | |  | |     #\r\n");
 8000296:	480d      	ldr	r0, [pc, #52]	; (80002cc <DisplayBanner+0x4c>)
 8000298:	f000 fa8c 	bl	80007b4 <puts>
	printf("#       / /\ \  |  __|   \___ \  / _ \ / __|| | | || '__| / _ \  | |  | |  | |     #\r\n");
 800029c:	480c      	ldr	r0, [pc, #48]	; (80002d0 <DisplayBanner+0x50>)
 800029e:	f000 fa89 	bl	80007b4 <puts>
	printf("#      / ____ \ | |____  ____) ||  __/| (__ | |_| || |   |  __/ _| |_ | |__| |     #\r\n");
 80002a2:	480c      	ldr	r0, [pc, #48]	; (80002d4 <DisplayBanner+0x54>)
 80002a4:	f000 fa86 	bl	80007b4 <puts>
	printf("#     /_/    \_\|______||_____/  \___| \___| \__,_||_|    \___||_____| \____/      #\r\n");
 80002a8:	480b      	ldr	r0, [pc, #44]	; (80002d8 <DisplayBanner+0x58>)
 80002aa:	f000 fa83 	bl	80007b4 <puts>
	printf("#                                                                                  #\r\n");
 80002ae:	480b      	ldr	r0, [pc, #44]	; (80002dc <DisplayBanner+0x5c>)
 80002b0:	f000 fa80 	bl	80007b4 <puts>
	printf("####################################################################################\r\n");
 80002b4:	4802      	ldr	r0, [pc, #8]	; (80002c0 <DisplayBanner+0x40>)
 80002b6:	f000 fa7d 	bl	80007b4 <puts>
}
 80002ba:	bf00      	nop
 80002bc:	bd80      	pop	{r7, pc}
 80002be:	bf00      	nop
 80002c0:	080014a0 	.word	0x080014a0
 80002c4:	080014f8 	.word	0x080014f8
 80002c8:	08001550 	.word	0x08001550
 80002cc:	080015a4 	.word	0x080015a4
 80002d0:	080015fc 	.word	0x080015fc
 80002d4:	0800164c 	.word	0x0800164c
 80002d8:	080016a4 	.word	0x080016a4
 80002dc:	080016f4 	.word	0x080016f4

080002e0 <DisplayNote>:

void DisplayNote(void)
{
 80002e0:	b580      	push	{r7, lr}
 80002e2:	af00      	add	r7, sp, #0
	printf("@Note: \r\n");
 80002e4:	4808      	ldr	r0, [pc, #32]	; (8000308 <DisplayNote+0x28>)
 80002e6:	f000 fa65 	bl	80007b4 <puts>
	printf("AESecureIO is an embedded system application developed on an STM32F401 Nucleo-64    \r\n");
 80002ea:	4808      	ldr	r0, [pc, #32]	; (800030c <DisplayNote+0x2c>)
 80002ec:	f000 fa62 	bl	80007b4 <puts>
	printf("Development Board. It encrypts user-input data using AES-128 and stores it securely \r\n");
 80002f0:	4807      	ldr	r0, [pc, #28]	; (8000310 <DisplayNote+0x30>)
 80002f2:	f000 fa5f 	bl	80007b4 <puts>
	printf("on an SD card using SDIO. The application also supports decryption of data from the \r\n");
 80002f6:	4807      	ldr	r0, [pc, #28]	; (8000314 <DisplayNote+0x34>)
 80002f8:	f000 fa5c 	bl	80007b4 <puts>
	printf("SD card. The key is hard-coded and predetermined.");
 80002fc:	4806      	ldr	r0, [pc, #24]	; (8000318 <DisplayNote+0x38>)
 80002fe:	f000 f9f3 	bl	80006e8 <iprintf>
}
 8000302:	bf00      	nop
 8000304:	bd80      	pop	{r7, pc}
 8000306:	bf00      	nop
 8000308:	0800174c 	.word	0x0800174c
 800030c:	08001758 	.word	0x08001758
 8000310:	080017b0 	.word	0x080017b0
 8000314:	08001808 	.word	0x08001808
 8000318:	08001860 	.word	0x08001860

0800031c <DisplayInfo>:
void DisplayInfo(void)
{
 800031c:	b580      	push	{r7, lr}
 800031e:	af00      	add	r7, sp, #0
	printf("Input Data Size Limit : 512 bytes\r\n");
 8000320:	4809      	ldr	r0, [pc, #36]	; (8000348 <DisplayInfo+0x2c>)
 8000322:	f000 fa47 	bl	80007b4 <puts>
	printf("Read Data Limit       : 512 bytes\r\n");
 8000326:	4809      	ldr	r0, [pc, #36]	; (800034c <DisplayInfo+0x30>)
 8000328:	f000 fa44 	bl	80007b4 <puts>
	printf("Encryption Algorithm  : AES-128\r\n");
 800032c:	4808      	ldr	r0, [pc, #32]	; (8000350 <DisplayInfo+0x34>)
 800032e:	f000 fa41 	bl	80007b4 <puts>
	printf("Mode of Operation     : CBC\r\n");
 8000332:	4808      	ldr	r0, [pc, #32]	; (8000354 <DisplayInfo+0x38>)
 8000334:	f000 fa3e 	bl	80007b4 <puts>
	printf("Author                : mbedsyst\r\n");
 8000338:	4807      	ldr	r0, [pc, #28]	; (8000358 <DisplayInfo+0x3c>)
 800033a:	f000 fa3b 	bl	80007b4 <puts>
	printf("For more Information, visit mbedsyst.blogspot.com\r\n");
 800033e:	4807      	ldr	r0, [pc, #28]	; (800035c <DisplayInfo+0x40>)
 8000340:	f000 fa38 	bl	80007b4 <puts>
}
 8000344:	bf00      	nop
 8000346:	bd80      	pop	{r7, pc}
 8000348:	08001894 	.word	0x08001894
 800034c:	080018b8 	.word	0x080018b8
 8000350:	080018dc 	.word	0x080018dc
 8000354:	08001900 	.word	0x08001900
 8000358:	08001920 	.word	0x08001920
 800035c:	08001944 	.word	0x08001944

08000360 <DMA1_Stream6_IRQHandler>:
void DMA_StartTransfer(void)
{

}
void DMA1_Stream6_IRQHandler(void)
{
 8000360:	b480      	push	{r7}
 8000362:	af00      	add	r7, sp, #0

}
 8000364:	bf00      	nop
 8000366:	46bd      	mov	sp, r7
 8000368:	f85d 7b04 	ldr.w	r7, [sp], #4
 800036c:	4770      	bx	lr

0800036e <__io_putchar>:
#include <stdint.h>
#include "UART.h"
#include "stm32f4xx.h"

int __io_putchar(int ch)
{
 800036e:	b580      	push	{r7, lr}
 8000370:	b082      	sub	sp, #8
 8000372:	af00      	add	r7, sp, #0
 8000374:	6078      	str	r0, [r7, #4]
	UART_Write(ch);
 8000376:	6878      	ldr	r0, [r7, #4]
 8000378:	f000 f806 	bl	8000388 <UART_Write>
	return ch;
 800037c:	687b      	ldr	r3, [r7, #4]
}
 800037e:	4618      	mov	r0, r3
 8000380:	3708      	adds	r7, #8
 8000382:	46bd      	mov	sp, r7
 8000384:	bd80      	pop	{r7, pc}
	...

08000388 <UART_Write>:
	UART_Set_BaudRate(APB1_CLK, UART_BAUDRATE);
	USART2->CR1 |= (1<<13) | (1<<3) | (1<<2);
}

static void UART_Write(int ch)
{
 8000388:	b480      	push	{r7}
 800038a:	b083      	sub	sp, #12
 800038c:	af00      	add	r7, sp, #0
 800038e:	6078      	str	r0, [r7, #4]
	while (!(USART2->SR & (1<<7)));
 8000390:	bf00      	nop
 8000392:	4b08      	ldr	r3, [pc, #32]	; (80003b4 <UART_Write+0x2c>)
 8000394:	681b      	ldr	r3, [r3, #0]
 8000396:	f003 0380 	and.w	r3, r3, #128	; 0x80
 800039a:	2b00      	cmp	r3, #0
 800039c:	d0f9      	beq.n	8000392 <UART_Write+0xa>
	USART2->DR =  (ch & 0XFF);
 800039e:	687b      	ldr	r3, [r7, #4]
 80003a0:	4a04      	ldr	r2, [pc, #16]	; (80003b4 <UART_Write+0x2c>)
 80003a2:	b2db      	uxtb	r3, r3
 80003a4:	6053      	str	r3, [r2, #4]
}
 80003a6:	bf00      	nop
 80003a8:	370c      	adds	r7, #12
 80003aa:	46bd      	mov	sp, r7
 80003ac:	f85d 7b04 	ldr.w	r7, [sp], #4
 80003b0:	4770      	bx	lr
 80003b2:	bf00      	nop
 80003b4:	40004400 	.word	0x40004400

080003b8 <main>:
#include	<stm32f401xe.h>
#include	<stdio.h>
#include	<string.h>

int main(void)
{
 80003b8:	b580      	push	{r7, lr}
 80003ba:	af00      	add	r7, sp, #0
	DisplayBanner();
 80003bc:	f7ff ff60 	bl	8000280 <DisplayBanner>
	DisplayNote();
 80003c0:	f7ff ff8e 	bl	80002e0 <DisplayNote>
	DisplayInfo();
 80003c4:	f7ff ffaa 	bl	800031c <DisplayInfo>

	while(1)
 80003c8:	e7fe      	b.n	80003c8 <main+0x10>

080003ca <_read>:
  _kill(status, -1);
  while (1) {}    /* Make sure we hang here */
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 80003ca:	b580      	push	{r7, lr}
 80003cc:	b086      	sub	sp, #24
 80003ce:	af00      	add	r7, sp, #0
 80003d0:	60f8      	str	r0, [r7, #12]
 80003d2:	60b9      	str	r1, [r7, #8]
 80003d4:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80003d6:	2300      	movs	r3, #0
 80003d8:	617b      	str	r3, [r7, #20]
 80003da:	e00a      	b.n	80003f2 <_read+0x28>
  {
    *ptr++ = __io_getchar();
 80003dc:	f3af 8000 	nop.w
 80003e0:	4601      	mov	r1, r0
 80003e2:	68bb      	ldr	r3, [r7, #8]
 80003e4:	1c5a      	adds	r2, r3, #1
 80003e6:	60ba      	str	r2, [r7, #8]
 80003e8:	b2ca      	uxtb	r2, r1
 80003ea:	701a      	strb	r2, [r3, #0]
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80003ec:	697b      	ldr	r3, [r7, #20]
 80003ee:	3301      	adds	r3, #1
 80003f0:	617b      	str	r3, [r7, #20]
 80003f2:	697a      	ldr	r2, [r7, #20]
 80003f4:	687b      	ldr	r3, [r7, #4]
 80003f6:	429a      	cmp	r2, r3
 80003f8:	dbf0      	blt.n	80003dc <_read+0x12>
  }

  return len;
 80003fa:	687b      	ldr	r3, [r7, #4]
}
 80003fc:	4618      	mov	r0, r3
 80003fe:	3718      	adds	r7, #24
 8000400:	46bd      	mov	sp, r7
 8000402:	bd80      	pop	{r7, pc}

08000404 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8000404:	b580      	push	{r7, lr}
 8000406:	b086      	sub	sp, #24
 8000408:	af00      	add	r7, sp, #0
 800040a:	60f8      	str	r0, [r7, #12]
 800040c:	60b9      	str	r1, [r7, #8]
 800040e:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000410:	2300      	movs	r3, #0
 8000412:	617b      	str	r3, [r7, #20]
 8000414:	e009      	b.n	800042a <_write+0x26>
  {
    __io_putchar(*ptr++);
 8000416:	68bb      	ldr	r3, [r7, #8]
 8000418:	1c5a      	adds	r2, r3, #1
 800041a:	60ba      	str	r2, [r7, #8]
 800041c:	781b      	ldrb	r3, [r3, #0]
 800041e:	4618      	mov	r0, r3
 8000420:	f7ff ffa5 	bl	800036e <__io_putchar>
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000424:	697b      	ldr	r3, [r7, #20]
 8000426:	3301      	adds	r3, #1
 8000428:	617b      	str	r3, [r7, #20]
 800042a:	697a      	ldr	r2, [r7, #20]
 800042c:	687b      	ldr	r3, [r7, #4]
 800042e:	429a      	cmp	r2, r3
 8000430:	dbf1      	blt.n	8000416 <_write+0x12>
  }
  return len;
 8000432:	687b      	ldr	r3, [r7, #4]
}
 8000434:	4618      	mov	r0, r3
 8000436:	3718      	adds	r7, #24
 8000438:	46bd      	mov	sp, r7
 800043a:	bd80      	pop	{r7, pc}

0800043c <_close>:

int _close(int file)
{
 800043c:	b480      	push	{r7}
 800043e:	b083      	sub	sp, #12
 8000440:	af00      	add	r7, sp, #0
 8000442:	6078      	str	r0, [r7, #4]
  (void)file;
  return -1;
 8000444:	f04f 33ff 	mov.w	r3, #4294967295
}
 8000448:	4618      	mov	r0, r3
 800044a:	370c      	adds	r7, #12
 800044c:	46bd      	mov	sp, r7
 800044e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000452:	4770      	bx	lr

08000454 <_fstat>:


int _fstat(int file, struct stat *st)
{
 8000454:	b480      	push	{r7}
 8000456:	b083      	sub	sp, #12
 8000458:	af00      	add	r7, sp, #0
 800045a:	6078      	str	r0, [r7, #4]
 800045c:	6039      	str	r1, [r7, #0]
  (void)file;
  st->st_mode = S_IFCHR;
 800045e:	683b      	ldr	r3, [r7, #0]
 8000460:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 8000464:	605a      	str	r2, [r3, #4]
  return 0;
 8000466:	2300      	movs	r3, #0
}
 8000468:	4618      	mov	r0, r3
 800046a:	370c      	adds	r7, #12
 800046c:	46bd      	mov	sp, r7
 800046e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000472:	4770      	bx	lr

08000474 <_isatty>:

int _isatty(int file)
{
 8000474:	b480      	push	{r7}
 8000476:	b083      	sub	sp, #12
 8000478:	af00      	add	r7, sp, #0
 800047a:	6078      	str	r0, [r7, #4]
  (void)file;
  return 1;
 800047c:	2301      	movs	r3, #1
}
 800047e:	4618      	mov	r0, r3
 8000480:	370c      	adds	r7, #12
 8000482:	46bd      	mov	sp, r7
 8000484:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000488:	4770      	bx	lr

0800048a <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 800048a:	b480      	push	{r7}
 800048c:	b085      	sub	sp, #20
 800048e:	af00      	add	r7, sp, #0
 8000490:	60f8      	str	r0, [r7, #12]
 8000492:	60b9      	str	r1, [r7, #8]
 8000494:	607a      	str	r2, [r7, #4]
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
 8000496:	2300      	movs	r3, #0
}
 8000498:	4618      	mov	r0, r3
 800049a:	3714      	adds	r7, #20
 800049c:	46bd      	mov	sp, r7
 800049e:	f85d 7b04 	ldr.w	r7, [sp], #4
 80004a2:	4770      	bx	lr

080004a4 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 80004a4:	b580      	push	{r7, lr}
 80004a6:	b086      	sub	sp, #24
 80004a8:	af00      	add	r7, sp, #0
 80004aa:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 80004ac:	4a14      	ldr	r2, [pc, #80]	; (8000500 <_sbrk+0x5c>)
 80004ae:	4b15      	ldr	r3, [pc, #84]	; (8000504 <_sbrk+0x60>)
 80004b0:	1ad3      	subs	r3, r2, r3
 80004b2:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 80004b4:	697b      	ldr	r3, [r7, #20]
 80004b6:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 80004b8:	4b13      	ldr	r3, [pc, #76]	; (8000508 <_sbrk+0x64>)
 80004ba:	681b      	ldr	r3, [r3, #0]
 80004bc:	2b00      	cmp	r3, #0
 80004be:	d102      	bne.n	80004c6 <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 80004c0:	4b11      	ldr	r3, [pc, #68]	; (8000508 <_sbrk+0x64>)
 80004c2:	4a12      	ldr	r2, [pc, #72]	; (800050c <_sbrk+0x68>)
 80004c4:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 80004c6:	4b10      	ldr	r3, [pc, #64]	; (8000508 <_sbrk+0x64>)
 80004c8:	681a      	ldr	r2, [r3, #0]
 80004ca:	687b      	ldr	r3, [r7, #4]
 80004cc:	4413      	add	r3, r2
 80004ce:	693a      	ldr	r2, [r7, #16]
 80004d0:	429a      	cmp	r2, r3
 80004d2:	d207      	bcs.n	80004e4 <_sbrk+0x40>
  {
    errno = ENOMEM;
 80004d4:	f000 fa9c 	bl	8000a10 <__errno>
 80004d8:	4603      	mov	r3, r0
 80004da:	220c      	movs	r2, #12
 80004dc:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 80004de:	f04f 33ff 	mov.w	r3, #4294967295
 80004e2:	e009      	b.n	80004f8 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 80004e4:	4b08      	ldr	r3, [pc, #32]	; (8000508 <_sbrk+0x64>)
 80004e6:	681b      	ldr	r3, [r3, #0]
 80004e8:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 80004ea:	4b07      	ldr	r3, [pc, #28]	; (8000508 <_sbrk+0x64>)
 80004ec:	681a      	ldr	r2, [r3, #0]
 80004ee:	687b      	ldr	r3, [r7, #4]
 80004f0:	4413      	add	r3, r2
 80004f2:	4a05      	ldr	r2, [pc, #20]	; (8000508 <_sbrk+0x64>)
 80004f4:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 80004f6:	68fb      	ldr	r3, [r7, #12]
}
 80004f8:	4618      	mov	r0, r3
 80004fa:	3718      	adds	r7, #24
 80004fc:	46bd      	mov	sp, r7
 80004fe:	bd80      	pop	{r7, pc}
 8000500:	20018000 	.word	0x20018000
 8000504:	00000400 	.word	0x00000400
 8000508:	20000078 	.word	0x20000078
 800050c:	200001c8 	.word	0x200001c8

08000510 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000510:	480d      	ldr	r0, [pc, #52]	; (8000548 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8000512:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8000514:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000518:	480c      	ldr	r0, [pc, #48]	; (800054c <LoopForever+0x6>)
  ldr r1, =_edata
 800051a:	490d      	ldr	r1, [pc, #52]	; (8000550 <LoopForever+0xa>)
  ldr r2, =_sidata
 800051c:	4a0d      	ldr	r2, [pc, #52]	; (8000554 <LoopForever+0xe>)
  movs r3, #0
 800051e:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000520:	e002      	b.n	8000528 <LoopCopyDataInit>

08000522 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8000522:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000524:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000526:	3304      	adds	r3, #4

08000528 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000528:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800052a:	428c      	cmp	r4, r1
  bcc CopyDataInit
 800052c:	d3f9      	bcc.n	8000522 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800052e:	4a0a      	ldr	r2, [pc, #40]	; (8000558 <LoopForever+0x12>)
  ldr r4, =_ebss
 8000530:	4c0a      	ldr	r4, [pc, #40]	; (800055c <LoopForever+0x16>)
  movs r3, #0
 8000532:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000534:	e001      	b.n	800053a <LoopFillZerobss>

08000536 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8000536:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000538:	3204      	adds	r2, #4

0800053a <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 800053a:	42a2      	cmp	r2, r4
  bcc FillZerobss
 800053c:	d3fb      	bcc.n	8000536 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 800053e:	f000 fa6d 	bl	8000a1c <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8000542:	f7ff ff39 	bl	80003b8 <main>

08000546 <LoopForever>:

LoopForever:
  b LoopForever
 8000546:	e7fe      	b.n	8000546 <LoopForever>
  ldr   r0, =_estack
 8000548:	20018000 	.word	0x20018000
  ldr r0, =_sdata
 800054c:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000550:	2000005c 	.word	0x2000005c
  ldr r2, =_sidata
 8000554:	080019b4 	.word	0x080019b4
  ldr r2, =_sbss
 8000558:	2000005c 	.word	0x2000005c
  ldr r4, =_ebss
 800055c:	200001c8 	.word	0x200001c8

08000560 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000560:	e7fe      	b.n	8000560 <ADC_IRQHandler>
	...

08000564 <std>:
 8000564:	2300      	movs	r3, #0
 8000566:	b510      	push	{r4, lr}
 8000568:	4604      	mov	r4, r0
 800056a:	e9c0 3300 	strd	r3, r3, [r0]
 800056e:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8000572:	6083      	str	r3, [r0, #8]
 8000574:	8181      	strh	r1, [r0, #12]
 8000576:	6643      	str	r3, [r0, #100]	; 0x64
 8000578:	81c2      	strh	r2, [r0, #14]
 800057a:	6183      	str	r3, [r0, #24]
 800057c:	4619      	mov	r1, r3
 800057e:	2208      	movs	r2, #8
 8000580:	305c      	adds	r0, #92	; 0x5c
 8000582:	f000 f9f7 	bl	8000974 <memset>
 8000586:	4b0d      	ldr	r3, [pc, #52]	; (80005bc <std+0x58>)
 8000588:	6263      	str	r3, [r4, #36]	; 0x24
 800058a:	4b0d      	ldr	r3, [pc, #52]	; (80005c0 <std+0x5c>)
 800058c:	62a3      	str	r3, [r4, #40]	; 0x28
 800058e:	4b0d      	ldr	r3, [pc, #52]	; (80005c4 <std+0x60>)
 8000590:	62e3      	str	r3, [r4, #44]	; 0x2c
 8000592:	4b0d      	ldr	r3, [pc, #52]	; (80005c8 <std+0x64>)
 8000594:	6323      	str	r3, [r4, #48]	; 0x30
 8000596:	4b0d      	ldr	r3, [pc, #52]	; (80005cc <std+0x68>)
 8000598:	6224      	str	r4, [r4, #32]
 800059a:	429c      	cmp	r4, r3
 800059c:	d006      	beq.n	80005ac <std+0x48>
 800059e:	f103 0268 	add.w	r2, r3, #104	; 0x68
 80005a2:	4294      	cmp	r4, r2
 80005a4:	d002      	beq.n	80005ac <std+0x48>
 80005a6:	33d0      	adds	r3, #208	; 0xd0
 80005a8:	429c      	cmp	r4, r3
 80005aa:	d105      	bne.n	80005b8 <std+0x54>
 80005ac:	f104 0058 	add.w	r0, r4, #88	; 0x58
 80005b0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80005b4:	f000 ba56 	b.w	8000a64 <__retarget_lock_init_recursive>
 80005b8:	bd10      	pop	{r4, pc}
 80005ba:	bf00      	nop
 80005bc:	080007c5 	.word	0x080007c5
 80005c0:	080007e7 	.word	0x080007e7
 80005c4:	0800081f 	.word	0x0800081f
 80005c8:	08000843 	.word	0x08000843
 80005cc:	2000007c 	.word	0x2000007c

080005d0 <stdio_exit_handler>:
 80005d0:	4a02      	ldr	r2, [pc, #8]	; (80005dc <stdio_exit_handler+0xc>)
 80005d2:	4903      	ldr	r1, [pc, #12]	; (80005e0 <stdio_exit_handler+0x10>)
 80005d4:	4803      	ldr	r0, [pc, #12]	; (80005e4 <stdio_exit_handler+0x14>)
 80005d6:	f000 b869 	b.w	80006ac <_fwalk_sglue>
 80005da:	bf00      	nop
 80005dc:	20000000 	.word	0x20000000
 80005e0:	08001311 	.word	0x08001311
 80005e4:	2000000c 	.word	0x2000000c

080005e8 <cleanup_stdio>:
 80005e8:	6841      	ldr	r1, [r0, #4]
 80005ea:	4b0c      	ldr	r3, [pc, #48]	; (800061c <cleanup_stdio+0x34>)
 80005ec:	4299      	cmp	r1, r3
 80005ee:	b510      	push	{r4, lr}
 80005f0:	4604      	mov	r4, r0
 80005f2:	d001      	beq.n	80005f8 <cleanup_stdio+0x10>
 80005f4:	f000 fe8c 	bl	8001310 <_fflush_r>
 80005f8:	68a1      	ldr	r1, [r4, #8]
 80005fa:	4b09      	ldr	r3, [pc, #36]	; (8000620 <cleanup_stdio+0x38>)
 80005fc:	4299      	cmp	r1, r3
 80005fe:	d002      	beq.n	8000606 <cleanup_stdio+0x1e>
 8000600:	4620      	mov	r0, r4
 8000602:	f000 fe85 	bl	8001310 <_fflush_r>
 8000606:	68e1      	ldr	r1, [r4, #12]
 8000608:	4b06      	ldr	r3, [pc, #24]	; (8000624 <cleanup_stdio+0x3c>)
 800060a:	4299      	cmp	r1, r3
 800060c:	d004      	beq.n	8000618 <cleanup_stdio+0x30>
 800060e:	4620      	mov	r0, r4
 8000610:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000614:	f000 be7c 	b.w	8001310 <_fflush_r>
 8000618:	bd10      	pop	{r4, pc}
 800061a:	bf00      	nop
 800061c:	2000007c 	.word	0x2000007c
 8000620:	200000e4 	.word	0x200000e4
 8000624:	2000014c 	.word	0x2000014c

08000628 <global_stdio_init.part.0>:
 8000628:	b510      	push	{r4, lr}
 800062a:	4b0b      	ldr	r3, [pc, #44]	; (8000658 <global_stdio_init.part.0+0x30>)
 800062c:	4c0b      	ldr	r4, [pc, #44]	; (800065c <global_stdio_init.part.0+0x34>)
 800062e:	4a0c      	ldr	r2, [pc, #48]	; (8000660 <global_stdio_init.part.0+0x38>)
 8000630:	601a      	str	r2, [r3, #0]
 8000632:	4620      	mov	r0, r4
 8000634:	2200      	movs	r2, #0
 8000636:	2104      	movs	r1, #4
 8000638:	f7ff ff94 	bl	8000564 <std>
 800063c:	f104 0068 	add.w	r0, r4, #104	; 0x68
 8000640:	2201      	movs	r2, #1
 8000642:	2109      	movs	r1, #9
 8000644:	f7ff ff8e 	bl	8000564 <std>
 8000648:	f104 00d0 	add.w	r0, r4, #208	; 0xd0
 800064c:	2202      	movs	r2, #2
 800064e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000652:	2112      	movs	r1, #18
 8000654:	f7ff bf86 	b.w	8000564 <std>
 8000658:	200001b4 	.word	0x200001b4
 800065c:	2000007c 	.word	0x2000007c
 8000660:	080005d1 	.word	0x080005d1

08000664 <__sfp_lock_acquire>:
 8000664:	4801      	ldr	r0, [pc, #4]	; (800066c <__sfp_lock_acquire+0x8>)
 8000666:	f000 b9fe 	b.w	8000a66 <__retarget_lock_acquire_recursive>
 800066a:	bf00      	nop
 800066c:	200001bd 	.word	0x200001bd

08000670 <__sfp_lock_release>:
 8000670:	4801      	ldr	r0, [pc, #4]	; (8000678 <__sfp_lock_release+0x8>)
 8000672:	f000 b9f9 	b.w	8000a68 <__retarget_lock_release_recursive>
 8000676:	bf00      	nop
 8000678:	200001bd 	.word	0x200001bd

0800067c <__sinit>:
 800067c:	b510      	push	{r4, lr}
 800067e:	4604      	mov	r4, r0
 8000680:	f7ff fff0 	bl	8000664 <__sfp_lock_acquire>
 8000684:	6a23      	ldr	r3, [r4, #32]
 8000686:	b11b      	cbz	r3, 8000690 <__sinit+0x14>
 8000688:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800068c:	f7ff bff0 	b.w	8000670 <__sfp_lock_release>
 8000690:	4b04      	ldr	r3, [pc, #16]	; (80006a4 <__sinit+0x28>)
 8000692:	6223      	str	r3, [r4, #32]
 8000694:	4b04      	ldr	r3, [pc, #16]	; (80006a8 <__sinit+0x2c>)
 8000696:	681b      	ldr	r3, [r3, #0]
 8000698:	2b00      	cmp	r3, #0
 800069a:	d1f5      	bne.n	8000688 <__sinit+0xc>
 800069c:	f7ff ffc4 	bl	8000628 <global_stdio_init.part.0>
 80006a0:	e7f2      	b.n	8000688 <__sinit+0xc>
 80006a2:	bf00      	nop
 80006a4:	080005e9 	.word	0x080005e9
 80006a8:	200001b4 	.word	0x200001b4

080006ac <_fwalk_sglue>:
 80006ac:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80006b0:	4607      	mov	r7, r0
 80006b2:	4688      	mov	r8, r1
 80006b4:	4614      	mov	r4, r2
 80006b6:	2600      	movs	r6, #0
 80006b8:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 80006bc:	f1b9 0901 	subs.w	r9, r9, #1
 80006c0:	d505      	bpl.n	80006ce <_fwalk_sglue+0x22>
 80006c2:	6824      	ldr	r4, [r4, #0]
 80006c4:	2c00      	cmp	r4, #0
 80006c6:	d1f7      	bne.n	80006b8 <_fwalk_sglue+0xc>
 80006c8:	4630      	mov	r0, r6
 80006ca:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80006ce:	89ab      	ldrh	r3, [r5, #12]
 80006d0:	2b01      	cmp	r3, #1
 80006d2:	d907      	bls.n	80006e4 <_fwalk_sglue+0x38>
 80006d4:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 80006d8:	3301      	adds	r3, #1
 80006da:	d003      	beq.n	80006e4 <_fwalk_sglue+0x38>
 80006dc:	4629      	mov	r1, r5
 80006de:	4638      	mov	r0, r7
 80006e0:	47c0      	blx	r8
 80006e2:	4306      	orrs	r6, r0
 80006e4:	3568      	adds	r5, #104	; 0x68
 80006e6:	e7e9      	b.n	80006bc <_fwalk_sglue+0x10>

080006e8 <iprintf>:
 80006e8:	b40f      	push	{r0, r1, r2, r3}
 80006ea:	b507      	push	{r0, r1, r2, lr}
 80006ec:	4906      	ldr	r1, [pc, #24]	; (8000708 <iprintf+0x20>)
 80006ee:	ab04      	add	r3, sp, #16
 80006f0:	6808      	ldr	r0, [r1, #0]
 80006f2:	f853 2b04 	ldr.w	r2, [r3], #4
 80006f6:	6881      	ldr	r1, [r0, #8]
 80006f8:	9301      	str	r3, [sp, #4]
 80006fa:	f000 fad9 	bl	8000cb0 <_vfiprintf_r>
 80006fe:	b003      	add	sp, #12
 8000700:	f85d eb04 	ldr.w	lr, [sp], #4
 8000704:	b004      	add	sp, #16
 8000706:	4770      	bx	lr
 8000708:	20000058 	.word	0x20000058

0800070c <_puts_r>:
 800070c:	6a03      	ldr	r3, [r0, #32]
 800070e:	b570      	push	{r4, r5, r6, lr}
 8000710:	6884      	ldr	r4, [r0, #8]
 8000712:	4605      	mov	r5, r0
 8000714:	460e      	mov	r6, r1
 8000716:	b90b      	cbnz	r3, 800071c <_puts_r+0x10>
 8000718:	f7ff ffb0 	bl	800067c <__sinit>
 800071c:	6e63      	ldr	r3, [r4, #100]	; 0x64
 800071e:	07db      	lsls	r3, r3, #31
 8000720:	d405      	bmi.n	800072e <_puts_r+0x22>
 8000722:	89a3      	ldrh	r3, [r4, #12]
 8000724:	0598      	lsls	r0, r3, #22
 8000726:	d402      	bmi.n	800072e <_puts_r+0x22>
 8000728:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800072a:	f000 f99c 	bl	8000a66 <__retarget_lock_acquire_recursive>
 800072e:	89a3      	ldrh	r3, [r4, #12]
 8000730:	0719      	lsls	r1, r3, #28
 8000732:	d513      	bpl.n	800075c <_puts_r+0x50>
 8000734:	6923      	ldr	r3, [r4, #16]
 8000736:	b18b      	cbz	r3, 800075c <_puts_r+0x50>
 8000738:	3e01      	subs	r6, #1
 800073a:	68a3      	ldr	r3, [r4, #8]
 800073c:	f816 1f01 	ldrb.w	r1, [r6, #1]!
 8000740:	3b01      	subs	r3, #1
 8000742:	60a3      	str	r3, [r4, #8]
 8000744:	b9e9      	cbnz	r1, 8000782 <_puts_r+0x76>
 8000746:	2b00      	cmp	r3, #0
 8000748:	da2e      	bge.n	80007a8 <_puts_r+0x9c>
 800074a:	4622      	mov	r2, r4
 800074c:	210a      	movs	r1, #10
 800074e:	4628      	mov	r0, r5
 8000750:	f000 f87b 	bl	800084a <__swbuf_r>
 8000754:	3001      	adds	r0, #1
 8000756:	d007      	beq.n	8000768 <_puts_r+0x5c>
 8000758:	250a      	movs	r5, #10
 800075a:	e007      	b.n	800076c <_puts_r+0x60>
 800075c:	4621      	mov	r1, r4
 800075e:	4628      	mov	r0, r5
 8000760:	f000 f8b0 	bl	80008c4 <__swsetup_r>
 8000764:	2800      	cmp	r0, #0
 8000766:	d0e7      	beq.n	8000738 <_puts_r+0x2c>
 8000768:	f04f 35ff 	mov.w	r5, #4294967295
 800076c:	6e63      	ldr	r3, [r4, #100]	; 0x64
 800076e:	07da      	lsls	r2, r3, #31
 8000770:	d405      	bmi.n	800077e <_puts_r+0x72>
 8000772:	89a3      	ldrh	r3, [r4, #12]
 8000774:	059b      	lsls	r3, r3, #22
 8000776:	d402      	bmi.n	800077e <_puts_r+0x72>
 8000778:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800077a:	f000 f975 	bl	8000a68 <__retarget_lock_release_recursive>
 800077e:	4628      	mov	r0, r5
 8000780:	bd70      	pop	{r4, r5, r6, pc}
 8000782:	2b00      	cmp	r3, #0
 8000784:	da04      	bge.n	8000790 <_puts_r+0x84>
 8000786:	69a2      	ldr	r2, [r4, #24]
 8000788:	429a      	cmp	r2, r3
 800078a:	dc06      	bgt.n	800079a <_puts_r+0x8e>
 800078c:	290a      	cmp	r1, #10
 800078e:	d004      	beq.n	800079a <_puts_r+0x8e>
 8000790:	6823      	ldr	r3, [r4, #0]
 8000792:	1c5a      	adds	r2, r3, #1
 8000794:	6022      	str	r2, [r4, #0]
 8000796:	7019      	strb	r1, [r3, #0]
 8000798:	e7cf      	b.n	800073a <_puts_r+0x2e>
 800079a:	4622      	mov	r2, r4
 800079c:	4628      	mov	r0, r5
 800079e:	f000 f854 	bl	800084a <__swbuf_r>
 80007a2:	3001      	adds	r0, #1
 80007a4:	d1c9      	bne.n	800073a <_puts_r+0x2e>
 80007a6:	e7df      	b.n	8000768 <_puts_r+0x5c>
 80007a8:	6823      	ldr	r3, [r4, #0]
 80007aa:	250a      	movs	r5, #10
 80007ac:	1c5a      	adds	r2, r3, #1
 80007ae:	6022      	str	r2, [r4, #0]
 80007b0:	701d      	strb	r5, [r3, #0]
 80007b2:	e7db      	b.n	800076c <_puts_r+0x60>

080007b4 <puts>:
 80007b4:	4b02      	ldr	r3, [pc, #8]	; (80007c0 <puts+0xc>)
 80007b6:	4601      	mov	r1, r0
 80007b8:	6818      	ldr	r0, [r3, #0]
 80007ba:	f7ff bfa7 	b.w	800070c <_puts_r>
 80007be:	bf00      	nop
 80007c0:	20000058 	.word	0x20000058

080007c4 <__sread>:
 80007c4:	b510      	push	{r4, lr}
 80007c6:	460c      	mov	r4, r1
 80007c8:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80007cc:	f000 f8fc 	bl	80009c8 <_read_r>
 80007d0:	2800      	cmp	r0, #0
 80007d2:	bfab      	itete	ge
 80007d4:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 80007d6:	89a3      	ldrhlt	r3, [r4, #12]
 80007d8:	181b      	addge	r3, r3, r0
 80007da:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 80007de:	bfac      	ite	ge
 80007e0:	6563      	strge	r3, [r4, #84]	; 0x54
 80007e2:	81a3      	strhlt	r3, [r4, #12]
 80007e4:	bd10      	pop	{r4, pc}

080007e6 <__swrite>:
 80007e6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80007ea:	461f      	mov	r7, r3
 80007ec:	898b      	ldrh	r3, [r1, #12]
 80007ee:	05db      	lsls	r3, r3, #23
 80007f0:	4605      	mov	r5, r0
 80007f2:	460c      	mov	r4, r1
 80007f4:	4616      	mov	r6, r2
 80007f6:	d505      	bpl.n	8000804 <__swrite+0x1e>
 80007f8:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80007fc:	2302      	movs	r3, #2
 80007fe:	2200      	movs	r2, #0
 8000800:	f000 f8d0 	bl	80009a4 <_lseek_r>
 8000804:	89a3      	ldrh	r3, [r4, #12]
 8000806:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 800080a:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 800080e:	81a3      	strh	r3, [r4, #12]
 8000810:	4632      	mov	r2, r6
 8000812:	463b      	mov	r3, r7
 8000814:	4628      	mov	r0, r5
 8000816:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800081a:	f000 b8e7 	b.w	80009ec <_write_r>

0800081e <__sseek>:
 800081e:	b510      	push	{r4, lr}
 8000820:	460c      	mov	r4, r1
 8000822:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000826:	f000 f8bd 	bl	80009a4 <_lseek_r>
 800082a:	1c43      	adds	r3, r0, #1
 800082c:	89a3      	ldrh	r3, [r4, #12]
 800082e:	bf15      	itete	ne
 8000830:	6560      	strne	r0, [r4, #84]	; 0x54
 8000832:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 8000836:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 800083a:	81a3      	strheq	r3, [r4, #12]
 800083c:	bf18      	it	ne
 800083e:	81a3      	strhne	r3, [r4, #12]
 8000840:	bd10      	pop	{r4, pc}

08000842 <__sclose>:
 8000842:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000846:	f000 b89d 	b.w	8000984 <_close_r>

0800084a <__swbuf_r>:
 800084a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800084c:	460e      	mov	r6, r1
 800084e:	4614      	mov	r4, r2
 8000850:	4605      	mov	r5, r0
 8000852:	b118      	cbz	r0, 800085c <__swbuf_r+0x12>
 8000854:	6a03      	ldr	r3, [r0, #32]
 8000856:	b90b      	cbnz	r3, 800085c <__swbuf_r+0x12>
 8000858:	f7ff ff10 	bl	800067c <__sinit>
 800085c:	69a3      	ldr	r3, [r4, #24]
 800085e:	60a3      	str	r3, [r4, #8]
 8000860:	89a3      	ldrh	r3, [r4, #12]
 8000862:	071a      	lsls	r2, r3, #28
 8000864:	d525      	bpl.n	80008b2 <__swbuf_r+0x68>
 8000866:	6923      	ldr	r3, [r4, #16]
 8000868:	b31b      	cbz	r3, 80008b2 <__swbuf_r+0x68>
 800086a:	6823      	ldr	r3, [r4, #0]
 800086c:	6922      	ldr	r2, [r4, #16]
 800086e:	1a98      	subs	r0, r3, r2
 8000870:	6963      	ldr	r3, [r4, #20]
 8000872:	b2f6      	uxtb	r6, r6
 8000874:	4283      	cmp	r3, r0
 8000876:	4637      	mov	r7, r6
 8000878:	dc04      	bgt.n	8000884 <__swbuf_r+0x3a>
 800087a:	4621      	mov	r1, r4
 800087c:	4628      	mov	r0, r5
 800087e:	f000 fd47 	bl	8001310 <_fflush_r>
 8000882:	b9e0      	cbnz	r0, 80008be <__swbuf_r+0x74>
 8000884:	68a3      	ldr	r3, [r4, #8]
 8000886:	3b01      	subs	r3, #1
 8000888:	60a3      	str	r3, [r4, #8]
 800088a:	6823      	ldr	r3, [r4, #0]
 800088c:	1c5a      	adds	r2, r3, #1
 800088e:	6022      	str	r2, [r4, #0]
 8000890:	701e      	strb	r6, [r3, #0]
 8000892:	6962      	ldr	r2, [r4, #20]
 8000894:	1c43      	adds	r3, r0, #1
 8000896:	429a      	cmp	r2, r3
 8000898:	d004      	beq.n	80008a4 <__swbuf_r+0x5a>
 800089a:	89a3      	ldrh	r3, [r4, #12]
 800089c:	07db      	lsls	r3, r3, #31
 800089e:	d506      	bpl.n	80008ae <__swbuf_r+0x64>
 80008a0:	2e0a      	cmp	r6, #10
 80008a2:	d104      	bne.n	80008ae <__swbuf_r+0x64>
 80008a4:	4621      	mov	r1, r4
 80008a6:	4628      	mov	r0, r5
 80008a8:	f000 fd32 	bl	8001310 <_fflush_r>
 80008ac:	b938      	cbnz	r0, 80008be <__swbuf_r+0x74>
 80008ae:	4638      	mov	r0, r7
 80008b0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80008b2:	4621      	mov	r1, r4
 80008b4:	4628      	mov	r0, r5
 80008b6:	f000 f805 	bl	80008c4 <__swsetup_r>
 80008ba:	2800      	cmp	r0, #0
 80008bc:	d0d5      	beq.n	800086a <__swbuf_r+0x20>
 80008be:	f04f 37ff 	mov.w	r7, #4294967295
 80008c2:	e7f4      	b.n	80008ae <__swbuf_r+0x64>

080008c4 <__swsetup_r>:
 80008c4:	b538      	push	{r3, r4, r5, lr}
 80008c6:	4b2a      	ldr	r3, [pc, #168]	; (8000970 <__swsetup_r+0xac>)
 80008c8:	4605      	mov	r5, r0
 80008ca:	6818      	ldr	r0, [r3, #0]
 80008cc:	460c      	mov	r4, r1
 80008ce:	b118      	cbz	r0, 80008d8 <__swsetup_r+0x14>
 80008d0:	6a03      	ldr	r3, [r0, #32]
 80008d2:	b90b      	cbnz	r3, 80008d8 <__swsetup_r+0x14>
 80008d4:	f7ff fed2 	bl	800067c <__sinit>
 80008d8:	89a3      	ldrh	r3, [r4, #12]
 80008da:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 80008de:	0718      	lsls	r0, r3, #28
 80008e0:	d422      	bmi.n	8000928 <__swsetup_r+0x64>
 80008e2:	06d9      	lsls	r1, r3, #27
 80008e4:	d407      	bmi.n	80008f6 <__swsetup_r+0x32>
 80008e6:	2309      	movs	r3, #9
 80008e8:	602b      	str	r3, [r5, #0]
 80008ea:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 80008ee:	81a3      	strh	r3, [r4, #12]
 80008f0:	f04f 30ff 	mov.w	r0, #4294967295
 80008f4:	e034      	b.n	8000960 <__swsetup_r+0x9c>
 80008f6:	0758      	lsls	r0, r3, #29
 80008f8:	d512      	bpl.n	8000920 <__swsetup_r+0x5c>
 80008fa:	6b61      	ldr	r1, [r4, #52]	; 0x34
 80008fc:	b141      	cbz	r1, 8000910 <__swsetup_r+0x4c>
 80008fe:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8000902:	4299      	cmp	r1, r3
 8000904:	d002      	beq.n	800090c <__swsetup_r+0x48>
 8000906:	4628      	mov	r0, r5
 8000908:	f000 f8b0 	bl	8000a6c <_free_r>
 800090c:	2300      	movs	r3, #0
 800090e:	6363      	str	r3, [r4, #52]	; 0x34
 8000910:	89a3      	ldrh	r3, [r4, #12]
 8000912:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 8000916:	81a3      	strh	r3, [r4, #12]
 8000918:	2300      	movs	r3, #0
 800091a:	6063      	str	r3, [r4, #4]
 800091c:	6923      	ldr	r3, [r4, #16]
 800091e:	6023      	str	r3, [r4, #0]
 8000920:	89a3      	ldrh	r3, [r4, #12]
 8000922:	f043 0308 	orr.w	r3, r3, #8
 8000926:	81a3      	strh	r3, [r4, #12]
 8000928:	6923      	ldr	r3, [r4, #16]
 800092a:	b94b      	cbnz	r3, 8000940 <__swsetup_r+0x7c>
 800092c:	89a3      	ldrh	r3, [r4, #12]
 800092e:	f403 7320 	and.w	r3, r3, #640	; 0x280
 8000932:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8000936:	d003      	beq.n	8000940 <__swsetup_r+0x7c>
 8000938:	4621      	mov	r1, r4
 800093a:	4628      	mov	r0, r5
 800093c:	f000 fd36 	bl	80013ac <__smakebuf_r>
 8000940:	89a0      	ldrh	r0, [r4, #12]
 8000942:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8000946:	f010 0301 	ands.w	r3, r0, #1
 800094a:	d00a      	beq.n	8000962 <__swsetup_r+0x9e>
 800094c:	2300      	movs	r3, #0
 800094e:	60a3      	str	r3, [r4, #8]
 8000950:	6963      	ldr	r3, [r4, #20]
 8000952:	425b      	negs	r3, r3
 8000954:	61a3      	str	r3, [r4, #24]
 8000956:	6923      	ldr	r3, [r4, #16]
 8000958:	b943      	cbnz	r3, 800096c <__swsetup_r+0xa8>
 800095a:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 800095e:	d1c4      	bne.n	80008ea <__swsetup_r+0x26>
 8000960:	bd38      	pop	{r3, r4, r5, pc}
 8000962:	0781      	lsls	r1, r0, #30
 8000964:	bf58      	it	pl
 8000966:	6963      	ldrpl	r3, [r4, #20]
 8000968:	60a3      	str	r3, [r4, #8]
 800096a:	e7f4      	b.n	8000956 <__swsetup_r+0x92>
 800096c:	2000      	movs	r0, #0
 800096e:	e7f7      	b.n	8000960 <__swsetup_r+0x9c>
 8000970:	20000058 	.word	0x20000058

08000974 <memset>:
 8000974:	4402      	add	r2, r0
 8000976:	4603      	mov	r3, r0
 8000978:	4293      	cmp	r3, r2
 800097a:	d100      	bne.n	800097e <memset+0xa>
 800097c:	4770      	bx	lr
 800097e:	f803 1b01 	strb.w	r1, [r3], #1
 8000982:	e7f9      	b.n	8000978 <memset+0x4>

08000984 <_close_r>:
 8000984:	b538      	push	{r3, r4, r5, lr}
 8000986:	4d06      	ldr	r5, [pc, #24]	; (80009a0 <_close_r+0x1c>)
 8000988:	2300      	movs	r3, #0
 800098a:	4604      	mov	r4, r0
 800098c:	4608      	mov	r0, r1
 800098e:	602b      	str	r3, [r5, #0]
 8000990:	f7ff fd54 	bl	800043c <_close>
 8000994:	1c43      	adds	r3, r0, #1
 8000996:	d102      	bne.n	800099e <_close_r+0x1a>
 8000998:	682b      	ldr	r3, [r5, #0]
 800099a:	b103      	cbz	r3, 800099e <_close_r+0x1a>
 800099c:	6023      	str	r3, [r4, #0]
 800099e:	bd38      	pop	{r3, r4, r5, pc}
 80009a0:	200001b8 	.word	0x200001b8

080009a4 <_lseek_r>:
 80009a4:	b538      	push	{r3, r4, r5, lr}
 80009a6:	4d07      	ldr	r5, [pc, #28]	; (80009c4 <_lseek_r+0x20>)
 80009a8:	4604      	mov	r4, r0
 80009aa:	4608      	mov	r0, r1
 80009ac:	4611      	mov	r1, r2
 80009ae:	2200      	movs	r2, #0
 80009b0:	602a      	str	r2, [r5, #0]
 80009b2:	461a      	mov	r2, r3
 80009b4:	f7ff fd69 	bl	800048a <_lseek>
 80009b8:	1c43      	adds	r3, r0, #1
 80009ba:	d102      	bne.n	80009c2 <_lseek_r+0x1e>
 80009bc:	682b      	ldr	r3, [r5, #0]
 80009be:	b103      	cbz	r3, 80009c2 <_lseek_r+0x1e>
 80009c0:	6023      	str	r3, [r4, #0]
 80009c2:	bd38      	pop	{r3, r4, r5, pc}
 80009c4:	200001b8 	.word	0x200001b8

080009c8 <_read_r>:
 80009c8:	b538      	push	{r3, r4, r5, lr}
 80009ca:	4d07      	ldr	r5, [pc, #28]	; (80009e8 <_read_r+0x20>)
 80009cc:	4604      	mov	r4, r0
 80009ce:	4608      	mov	r0, r1
 80009d0:	4611      	mov	r1, r2
 80009d2:	2200      	movs	r2, #0
 80009d4:	602a      	str	r2, [r5, #0]
 80009d6:	461a      	mov	r2, r3
 80009d8:	f7ff fcf7 	bl	80003ca <_read>
 80009dc:	1c43      	adds	r3, r0, #1
 80009de:	d102      	bne.n	80009e6 <_read_r+0x1e>
 80009e0:	682b      	ldr	r3, [r5, #0]
 80009e2:	b103      	cbz	r3, 80009e6 <_read_r+0x1e>
 80009e4:	6023      	str	r3, [r4, #0]
 80009e6:	bd38      	pop	{r3, r4, r5, pc}
 80009e8:	200001b8 	.word	0x200001b8

080009ec <_write_r>:
 80009ec:	b538      	push	{r3, r4, r5, lr}
 80009ee:	4d07      	ldr	r5, [pc, #28]	; (8000a0c <_write_r+0x20>)
 80009f0:	4604      	mov	r4, r0
 80009f2:	4608      	mov	r0, r1
 80009f4:	4611      	mov	r1, r2
 80009f6:	2200      	movs	r2, #0
 80009f8:	602a      	str	r2, [r5, #0]
 80009fa:	461a      	mov	r2, r3
 80009fc:	f7ff fd02 	bl	8000404 <_write>
 8000a00:	1c43      	adds	r3, r0, #1
 8000a02:	d102      	bne.n	8000a0a <_write_r+0x1e>
 8000a04:	682b      	ldr	r3, [r5, #0]
 8000a06:	b103      	cbz	r3, 8000a0a <_write_r+0x1e>
 8000a08:	6023      	str	r3, [r4, #0]
 8000a0a:	bd38      	pop	{r3, r4, r5, pc}
 8000a0c:	200001b8 	.word	0x200001b8

08000a10 <__errno>:
 8000a10:	4b01      	ldr	r3, [pc, #4]	; (8000a18 <__errno+0x8>)
 8000a12:	6818      	ldr	r0, [r3, #0]
 8000a14:	4770      	bx	lr
 8000a16:	bf00      	nop
 8000a18:	20000058 	.word	0x20000058

08000a1c <__libc_init_array>:
 8000a1c:	b570      	push	{r4, r5, r6, lr}
 8000a1e:	4d0d      	ldr	r5, [pc, #52]	; (8000a54 <__libc_init_array+0x38>)
 8000a20:	4c0d      	ldr	r4, [pc, #52]	; (8000a58 <__libc_init_array+0x3c>)
 8000a22:	1b64      	subs	r4, r4, r5
 8000a24:	10a4      	asrs	r4, r4, #2
 8000a26:	2600      	movs	r6, #0
 8000a28:	42a6      	cmp	r6, r4
 8000a2a:	d109      	bne.n	8000a40 <__libc_init_array+0x24>
 8000a2c:	4d0b      	ldr	r5, [pc, #44]	; (8000a5c <__libc_init_array+0x40>)
 8000a2e:	4c0c      	ldr	r4, [pc, #48]	; (8000a60 <__libc_init_array+0x44>)
 8000a30:	f000 fd2a 	bl	8001488 <_init>
 8000a34:	1b64      	subs	r4, r4, r5
 8000a36:	10a4      	asrs	r4, r4, #2
 8000a38:	2600      	movs	r6, #0
 8000a3a:	42a6      	cmp	r6, r4
 8000a3c:	d105      	bne.n	8000a4a <__libc_init_array+0x2e>
 8000a3e:	bd70      	pop	{r4, r5, r6, pc}
 8000a40:	f855 3b04 	ldr.w	r3, [r5], #4
 8000a44:	4798      	blx	r3
 8000a46:	3601      	adds	r6, #1
 8000a48:	e7ee      	b.n	8000a28 <__libc_init_array+0xc>
 8000a4a:	f855 3b04 	ldr.w	r3, [r5], #4
 8000a4e:	4798      	blx	r3
 8000a50:	3601      	adds	r6, #1
 8000a52:	e7f2      	b.n	8000a3a <__libc_init_array+0x1e>
 8000a54:	080019ac 	.word	0x080019ac
 8000a58:	080019ac 	.word	0x080019ac
 8000a5c:	080019ac 	.word	0x080019ac
 8000a60:	080019b0 	.word	0x080019b0

08000a64 <__retarget_lock_init_recursive>:
 8000a64:	4770      	bx	lr

08000a66 <__retarget_lock_acquire_recursive>:
 8000a66:	4770      	bx	lr

08000a68 <__retarget_lock_release_recursive>:
 8000a68:	4770      	bx	lr
	...

08000a6c <_free_r>:
 8000a6c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8000a6e:	2900      	cmp	r1, #0
 8000a70:	d044      	beq.n	8000afc <_free_r+0x90>
 8000a72:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8000a76:	9001      	str	r0, [sp, #4]
 8000a78:	2b00      	cmp	r3, #0
 8000a7a:	f1a1 0404 	sub.w	r4, r1, #4
 8000a7e:	bfb8      	it	lt
 8000a80:	18e4      	addlt	r4, r4, r3
 8000a82:	f000 f8df 	bl	8000c44 <__malloc_lock>
 8000a86:	4a1e      	ldr	r2, [pc, #120]	; (8000b00 <_free_r+0x94>)
 8000a88:	9801      	ldr	r0, [sp, #4]
 8000a8a:	6813      	ldr	r3, [r2, #0]
 8000a8c:	b933      	cbnz	r3, 8000a9c <_free_r+0x30>
 8000a8e:	6063      	str	r3, [r4, #4]
 8000a90:	6014      	str	r4, [r2, #0]
 8000a92:	b003      	add	sp, #12
 8000a94:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8000a98:	f000 b8da 	b.w	8000c50 <__malloc_unlock>
 8000a9c:	42a3      	cmp	r3, r4
 8000a9e:	d908      	bls.n	8000ab2 <_free_r+0x46>
 8000aa0:	6825      	ldr	r5, [r4, #0]
 8000aa2:	1961      	adds	r1, r4, r5
 8000aa4:	428b      	cmp	r3, r1
 8000aa6:	bf01      	itttt	eq
 8000aa8:	6819      	ldreq	r1, [r3, #0]
 8000aaa:	685b      	ldreq	r3, [r3, #4]
 8000aac:	1949      	addeq	r1, r1, r5
 8000aae:	6021      	streq	r1, [r4, #0]
 8000ab0:	e7ed      	b.n	8000a8e <_free_r+0x22>
 8000ab2:	461a      	mov	r2, r3
 8000ab4:	685b      	ldr	r3, [r3, #4]
 8000ab6:	b10b      	cbz	r3, 8000abc <_free_r+0x50>
 8000ab8:	42a3      	cmp	r3, r4
 8000aba:	d9fa      	bls.n	8000ab2 <_free_r+0x46>
 8000abc:	6811      	ldr	r1, [r2, #0]
 8000abe:	1855      	adds	r5, r2, r1
 8000ac0:	42a5      	cmp	r5, r4
 8000ac2:	d10b      	bne.n	8000adc <_free_r+0x70>
 8000ac4:	6824      	ldr	r4, [r4, #0]
 8000ac6:	4421      	add	r1, r4
 8000ac8:	1854      	adds	r4, r2, r1
 8000aca:	42a3      	cmp	r3, r4
 8000acc:	6011      	str	r1, [r2, #0]
 8000ace:	d1e0      	bne.n	8000a92 <_free_r+0x26>
 8000ad0:	681c      	ldr	r4, [r3, #0]
 8000ad2:	685b      	ldr	r3, [r3, #4]
 8000ad4:	6053      	str	r3, [r2, #4]
 8000ad6:	440c      	add	r4, r1
 8000ad8:	6014      	str	r4, [r2, #0]
 8000ada:	e7da      	b.n	8000a92 <_free_r+0x26>
 8000adc:	d902      	bls.n	8000ae4 <_free_r+0x78>
 8000ade:	230c      	movs	r3, #12
 8000ae0:	6003      	str	r3, [r0, #0]
 8000ae2:	e7d6      	b.n	8000a92 <_free_r+0x26>
 8000ae4:	6825      	ldr	r5, [r4, #0]
 8000ae6:	1961      	adds	r1, r4, r5
 8000ae8:	428b      	cmp	r3, r1
 8000aea:	bf04      	itt	eq
 8000aec:	6819      	ldreq	r1, [r3, #0]
 8000aee:	685b      	ldreq	r3, [r3, #4]
 8000af0:	6063      	str	r3, [r4, #4]
 8000af2:	bf04      	itt	eq
 8000af4:	1949      	addeq	r1, r1, r5
 8000af6:	6021      	streq	r1, [r4, #0]
 8000af8:	6054      	str	r4, [r2, #4]
 8000afa:	e7ca      	b.n	8000a92 <_free_r+0x26>
 8000afc:	b003      	add	sp, #12
 8000afe:	bd30      	pop	{r4, r5, pc}
 8000b00:	200001c0 	.word	0x200001c0

08000b04 <sbrk_aligned>:
 8000b04:	b570      	push	{r4, r5, r6, lr}
 8000b06:	4e0e      	ldr	r6, [pc, #56]	; (8000b40 <sbrk_aligned+0x3c>)
 8000b08:	460c      	mov	r4, r1
 8000b0a:	6831      	ldr	r1, [r6, #0]
 8000b0c:	4605      	mov	r5, r0
 8000b0e:	b911      	cbnz	r1, 8000b16 <sbrk_aligned+0x12>
 8000b10:	f000 fcaa 	bl	8001468 <_sbrk_r>
 8000b14:	6030      	str	r0, [r6, #0]
 8000b16:	4621      	mov	r1, r4
 8000b18:	4628      	mov	r0, r5
 8000b1a:	f000 fca5 	bl	8001468 <_sbrk_r>
 8000b1e:	1c43      	adds	r3, r0, #1
 8000b20:	d00a      	beq.n	8000b38 <sbrk_aligned+0x34>
 8000b22:	1cc4      	adds	r4, r0, #3
 8000b24:	f024 0403 	bic.w	r4, r4, #3
 8000b28:	42a0      	cmp	r0, r4
 8000b2a:	d007      	beq.n	8000b3c <sbrk_aligned+0x38>
 8000b2c:	1a21      	subs	r1, r4, r0
 8000b2e:	4628      	mov	r0, r5
 8000b30:	f000 fc9a 	bl	8001468 <_sbrk_r>
 8000b34:	3001      	adds	r0, #1
 8000b36:	d101      	bne.n	8000b3c <sbrk_aligned+0x38>
 8000b38:	f04f 34ff 	mov.w	r4, #4294967295
 8000b3c:	4620      	mov	r0, r4
 8000b3e:	bd70      	pop	{r4, r5, r6, pc}
 8000b40:	200001c4 	.word	0x200001c4

08000b44 <_malloc_r>:
 8000b44:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8000b48:	1ccd      	adds	r5, r1, #3
 8000b4a:	f025 0503 	bic.w	r5, r5, #3
 8000b4e:	3508      	adds	r5, #8
 8000b50:	2d0c      	cmp	r5, #12
 8000b52:	bf38      	it	cc
 8000b54:	250c      	movcc	r5, #12
 8000b56:	2d00      	cmp	r5, #0
 8000b58:	4607      	mov	r7, r0
 8000b5a:	db01      	blt.n	8000b60 <_malloc_r+0x1c>
 8000b5c:	42a9      	cmp	r1, r5
 8000b5e:	d905      	bls.n	8000b6c <_malloc_r+0x28>
 8000b60:	230c      	movs	r3, #12
 8000b62:	603b      	str	r3, [r7, #0]
 8000b64:	2600      	movs	r6, #0
 8000b66:	4630      	mov	r0, r6
 8000b68:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8000b6c:	f8df 80d0 	ldr.w	r8, [pc, #208]	; 8000c40 <_malloc_r+0xfc>
 8000b70:	f000 f868 	bl	8000c44 <__malloc_lock>
 8000b74:	f8d8 3000 	ldr.w	r3, [r8]
 8000b78:	461c      	mov	r4, r3
 8000b7a:	bb5c      	cbnz	r4, 8000bd4 <_malloc_r+0x90>
 8000b7c:	4629      	mov	r1, r5
 8000b7e:	4638      	mov	r0, r7
 8000b80:	f7ff ffc0 	bl	8000b04 <sbrk_aligned>
 8000b84:	1c43      	adds	r3, r0, #1
 8000b86:	4604      	mov	r4, r0
 8000b88:	d155      	bne.n	8000c36 <_malloc_r+0xf2>
 8000b8a:	f8d8 4000 	ldr.w	r4, [r8]
 8000b8e:	4626      	mov	r6, r4
 8000b90:	2e00      	cmp	r6, #0
 8000b92:	d145      	bne.n	8000c20 <_malloc_r+0xdc>
 8000b94:	2c00      	cmp	r4, #0
 8000b96:	d048      	beq.n	8000c2a <_malloc_r+0xe6>
 8000b98:	6823      	ldr	r3, [r4, #0]
 8000b9a:	4631      	mov	r1, r6
 8000b9c:	4638      	mov	r0, r7
 8000b9e:	eb04 0903 	add.w	r9, r4, r3
 8000ba2:	f000 fc61 	bl	8001468 <_sbrk_r>
 8000ba6:	4581      	cmp	r9, r0
 8000ba8:	d13f      	bne.n	8000c2a <_malloc_r+0xe6>
 8000baa:	6821      	ldr	r1, [r4, #0]
 8000bac:	1a6d      	subs	r5, r5, r1
 8000bae:	4629      	mov	r1, r5
 8000bb0:	4638      	mov	r0, r7
 8000bb2:	f7ff ffa7 	bl	8000b04 <sbrk_aligned>
 8000bb6:	3001      	adds	r0, #1
 8000bb8:	d037      	beq.n	8000c2a <_malloc_r+0xe6>
 8000bba:	6823      	ldr	r3, [r4, #0]
 8000bbc:	442b      	add	r3, r5
 8000bbe:	6023      	str	r3, [r4, #0]
 8000bc0:	f8d8 3000 	ldr.w	r3, [r8]
 8000bc4:	2b00      	cmp	r3, #0
 8000bc6:	d038      	beq.n	8000c3a <_malloc_r+0xf6>
 8000bc8:	685a      	ldr	r2, [r3, #4]
 8000bca:	42a2      	cmp	r2, r4
 8000bcc:	d12b      	bne.n	8000c26 <_malloc_r+0xe2>
 8000bce:	2200      	movs	r2, #0
 8000bd0:	605a      	str	r2, [r3, #4]
 8000bd2:	e00f      	b.n	8000bf4 <_malloc_r+0xb0>
 8000bd4:	6822      	ldr	r2, [r4, #0]
 8000bd6:	1b52      	subs	r2, r2, r5
 8000bd8:	d41f      	bmi.n	8000c1a <_malloc_r+0xd6>
 8000bda:	2a0b      	cmp	r2, #11
 8000bdc:	d917      	bls.n	8000c0e <_malloc_r+0xca>
 8000bde:	1961      	adds	r1, r4, r5
 8000be0:	42a3      	cmp	r3, r4
 8000be2:	6025      	str	r5, [r4, #0]
 8000be4:	bf18      	it	ne
 8000be6:	6059      	strne	r1, [r3, #4]
 8000be8:	6863      	ldr	r3, [r4, #4]
 8000bea:	bf08      	it	eq
 8000bec:	f8c8 1000 	streq.w	r1, [r8]
 8000bf0:	5162      	str	r2, [r4, r5]
 8000bf2:	604b      	str	r3, [r1, #4]
 8000bf4:	4638      	mov	r0, r7
 8000bf6:	f104 060b 	add.w	r6, r4, #11
 8000bfa:	f000 f829 	bl	8000c50 <__malloc_unlock>
 8000bfe:	f026 0607 	bic.w	r6, r6, #7
 8000c02:	1d23      	adds	r3, r4, #4
 8000c04:	1af2      	subs	r2, r6, r3
 8000c06:	d0ae      	beq.n	8000b66 <_malloc_r+0x22>
 8000c08:	1b9b      	subs	r3, r3, r6
 8000c0a:	50a3      	str	r3, [r4, r2]
 8000c0c:	e7ab      	b.n	8000b66 <_malloc_r+0x22>
 8000c0e:	42a3      	cmp	r3, r4
 8000c10:	6862      	ldr	r2, [r4, #4]
 8000c12:	d1dd      	bne.n	8000bd0 <_malloc_r+0x8c>
 8000c14:	f8c8 2000 	str.w	r2, [r8]
 8000c18:	e7ec      	b.n	8000bf4 <_malloc_r+0xb0>
 8000c1a:	4623      	mov	r3, r4
 8000c1c:	6864      	ldr	r4, [r4, #4]
 8000c1e:	e7ac      	b.n	8000b7a <_malloc_r+0x36>
 8000c20:	4634      	mov	r4, r6
 8000c22:	6876      	ldr	r6, [r6, #4]
 8000c24:	e7b4      	b.n	8000b90 <_malloc_r+0x4c>
 8000c26:	4613      	mov	r3, r2
 8000c28:	e7cc      	b.n	8000bc4 <_malloc_r+0x80>
 8000c2a:	230c      	movs	r3, #12
 8000c2c:	603b      	str	r3, [r7, #0]
 8000c2e:	4638      	mov	r0, r7
 8000c30:	f000 f80e 	bl	8000c50 <__malloc_unlock>
 8000c34:	e797      	b.n	8000b66 <_malloc_r+0x22>
 8000c36:	6025      	str	r5, [r4, #0]
 8000c38:	e7dc      	b.n	8000bf4 <_malloc_r+0xb0>
 8000c3a:	605b      	str	r3, [r3, #4]
 8000c3c:	deff      	udf	#255	; 0xff
 8000c3e:	bf00      	nop
 8000c40:	200001c0 	.word	0x200001c0

08000c44 <__malloc_lock>:
 8000c44:	4801      	ldr	r0, [pc, #4]	; (8000c4c <__malloc_lock+0x8>)
 8000c46:	f7ff bf0e 	b.w	8000a66 <__retarget_lock_acquire_recursive>
 8000c4a:	bf00      	nop
 8000c4c:	200001bc 	.word	0x200001bc

08000c50 <__malloc_unlock>:
 8000c50:	4801      	ldr	r0, [pc, #4]	; (8000c58 <__malloc_unlock+0x8>)
 8000c52:	f7ff bf09 	b.w	8000a68 <__retarget_lock_release_recursive>
 8000c56:	bf00      	nop
 8000c58:	200001bc 	.word	0x200001bc

08000c5c <__sfputc_r>:
 8000c5c:	6893      	ldr	r3, [r2, #8]
 8000c5e:	3b01      	subs	r3, #1
 8000c60:	2b00      	cmp	r3, #0
 8000c62:	b410      	push	{r4}
 8000c64:	6093      	str	r3, [r2, #8]
 8000c66:	da08      	bge.n	8000c7a <__sfputc_r+0x1e>
 8000c68:	6994      	ldr	r4, [r2, #24]
 8000c6a:	42a3      	cmp	r3, r4
 8000c6c:	db01      	blt.n	8000c72 <__sfputc_r+0x16>
 8000c6e:	290a      	cmp	r1, #10
 8000c70:	d103      	bne.n	8000c7a <__sfputc_r+0x1e>
 8000c72:	f85d 4b04 	ldr.w	r4, [sp], #4
 8000c76:	f7ff bde8 	b.w	800084a <__swbuf_r>
 8000c7a:	6813      	ldr	r3, [r2, #0]
 8000c7c:	1c58      	adds	r0, r3, #1
 8000c7e:	6010      	str	r0, [r2, #0]
 8000c80:	7019      	strb	r1, [r3, #0]
 8000c82:	4608      	mov	r0, r1
 8000c84:	f85d 4b04 	ldr.w	r4, [sp], #4
 8000c88:	4770      	bx	lr

08000c8a <__sfputs_r>:
 8000c8a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000c8c:	4606      	mov	r6, r0
 8000c8e:	460f      	mov	r7, r1
 8000c90:	4614      	mov	r4, r2
 8000c92:	18d5      	adds	r5, r2, r3
 8000c94:	42ac      	cmp	r4, r5
 8000c96:	d101      	bne.n	8000c9c <__sfputs_r+0x12>
 8000c98:	2000      	movs	r0, #0
 8000c9a:	e007      	b.n	8000cac <__sfputs_r+0x22>
 8000c9c:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000ca0:	463a      	mov	r2, r7
 8000ca2:	4630      	mov	r0, r6
 8000ca4:	f7ff ffda 	bl	8000c5c <__sfputc_r>
 8000ca8:	1c43      	adds	r3, r0, #1
 8000caa:	d1f3      	bne.n	8000c94 <__sfputs_r+0xa>
 8000cac:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08000cb0 <_vfiprintf_r>:
 8000cb0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8000cb4:	460d      	mov	r5, r1
 8000cb6:	b09d      	sub	sp, #116	; 0x74
 8000cb8:	4614      	mov	r4, r2
 8000cba:	4698      	mov	r8, r3
 8000cbc:	4606      	mov	r6, r0
 8000cbe:	b118      	cbz	r0, 8000cc8 <_vfiprintf_r+0x18>
 8000cc0:	6a03      	ldr	r3, [r0, #32]
 8000cc2:	b90b      	cbnz	r3, 8000cc8 <_vfiprintf_r+0x18>
 8000cc4:	f7ff fcda 	bl	800067c <__sinit>
 8000cc8:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8000cca:	07d9      	lsls	r1, r3, #31
 8000ccc:	d405      	bmi.n	8000cda <_vfiprintf_r+0x2a>
 8000cce:	89ab      	ldrh	r3, [r5, #12]
 8000cd0:	059a      	lsls	r2, r3, #22
 8000cd2:	d402      	bmi.n	8000cda <_vfiprintf_r+0x2a>
 8000cd4:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8000cd6:	f7ff fec6 	bl	8000a66 <__retarget_lock_acquire_recursive>
 8000cda:	89ab      	ldrh	r3, [r5, #12]
 8000cdc:	071b      	lsls	r3, r3, #28
 8000cde:	d501      	bpl.n	8000ce4 <_vfiprintf_r+0x34>
 8000ce0:	692b      	ldr	r3, [r5, #16]
 8000ce2:	b99b      	cbnz	r3, 8000d0c <_vfiprintf_r+0x5c>
 8000ce4:	4629      	mov	r1, r5
 8000ce6:	4630      	mov	r0, r6
 8000ce8:	f7ff fdec 	bl	80008c4 <__swsetup_r>
 8000cec:	b170      	cbz	r0, 8000d0c <_vfiprintf_r+0x5c>
 8000cee:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8000cf0:	07dc      	lsls	r4, r3, #31
 8000cf2:	d504      	bpl.n	8000cfe <_vfiprintf_r+0x4e>
 8000cf4:	f04f 30ff 	mov.w	r0, #4294967295
 8000cf8:	b01d      	add	sp, #116	; 0x74
 8000cfa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8000cfe:	89ab      	ldrh	r3, [r5, #12]
 8000d00:	0598      	lsls	r0, r3, #22
 8000d02:	d4f7      	bmi.n	8000cf4 <_vfiprintf_r+0x44>
 8000d04:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8000d06:	f7ff feaf 	bl	8000a68 <__retarget_lock_release_recursive>
 8000d0a:	e7f3      	b.n	8000cf4 <_vfiprintf_r+0x44>
 8000d0c:	2300      	movs	r3, #0
 8000d0e:	9309      	str	r3, [sp, #36]	; 0x24
 8000d10:	2320      	movs	r3, #32
 8000d12:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8000d16:	f8cd 800c 	str.w	r8, [sp, #12]
 8000d1a:	2330      	movs	r3, #48	; 0x30
 8000d1c:	f8df 81b0 	ldr.w	r8, [pc, #432]	; 8000ed0 <_vfiprintf_r+0x220>
 8000d20:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8000d24:	f04f 0901 	mov.w	r9, #1
 8000d28:	4623      	mov	r3, r4
 8000d2a:	469a      	mov	sl, r3
 8000d2c:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000d30:	b10a      	cbz	r2, 8000d36 <_vfiprintf_r+0x86>
 8000d32:	2a25      	cmp	r2, #37	; 0x25
 8000d34:	d1f9      	bne.n	8000d2a <_vfiprintf_r+0x7a>
 8000d36:	ebba 0b04 	subs.w	fp, sl, r4
 8000d3a:	d00b      	beq.n	8000d54 <_vfiprintf_r+0xa4>
 8000d3c:	465b      	mov	r3, fp
 8000d3e:	4622      	mov	r2, r4
 8000d40:	4629      	mov	r1, r5
 8000d42:	4630      	mov	r0, r6
 8000d44:	f7ff ffa1 	bl	8000c8a <__sfputs_r>
 8000d48:	3001      	adds	r0, #1
 8000d4a:	f000 80a9 	beq.w	8000ea0 <_vfiprintf_r+0x1f0>
 8000d4e:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8000d50:	445a      	add	r2, fp
 8000d52:	9209      	str	r2, [sp, #36]	; 0x24
 8000d54:	f89a 3000 	ldrb.w	r3, [sl]
 8000d58:	2b00      	cmp	r3, #0
 8000d5a:	f000 80a1 	beq.w	8000ea0 <_vfiprintf_r+0x1f0>
 8000d5e:	2300      	movs	r3, #0
 8000d60:	f04f 32ff 	mov.w	r2, #4294967295
 8000d64:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8000d68:	f10a 0a01 	add.w	sl, sl, #1
 8000d6c:	9304      	str	r3, [sp, #16]
 8000d6e:	9307      	str	r3, [sp, #28]
 8000d70:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8000d74:	931a      	str	r3, [sp, #104]	; 0x68
 8000d76:	4654      	mov	r4, sl
 8000d78:	2205      	movs	r2, #5
 8000d7a:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000d7e:	4854      	ldr	r0, [pc, #336]	; (8000ed0 <_vfiprintf_r+0x220>)
 8000d80:	f7ff fa2e 	bl	80001e0 <memchr>
 8000d84:	9a04      	ldr	r2, [sp, #16]
 8000d86:	b9d8      	cbnz	r0, 8000dc0 <_vfiprintf_r+0x110>
 8000d88:	06d1      	lsls	r1, r2, #27
 8000d8a:	bf44      	itt	mi
 8000d8c:	2320      	movmi	r3, #32
 8000d8e:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8000d92:	0713      	lsls	r3, r2, #28
 8000d94:	bf44      	itt	mi
 8000d96:	232b      	movmi	r3, #43	; 0x2b
 8000d98:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8000d9c:	f89a 3000 	ldrb.w	r3, [sl]
 8000da0:	2b2a      	cmp	r3, #42	; 0x2a
 8000da2:	d015      	beq.n	8000dd0 <_vfiprintf_r+0x120>
 8000da4:	9a07      	ldr	r2, [sp, #28]
 8000da6:	4654      	mov	r4, sl
 8000da8:	2000      	movs	r0, #0
 8000daa:	f04f 0c0a 	mov.w	ip, #10
 8000dae:	4621      	mov	r1, r4
 8000db0:	f811 3b01 	ldrb.w	r3, [r1], #1
 8000db4:	3b30      	subs	r3, #48	; 0x30
 8000db6:	2b09      	cmp	r3, #9
 8000db8:	d94d      	bls.n	8000e56 <_vfiprintf_r+0x1a6>
 8000dba:	b1b0      	cbz	r0, 8000dea <_vfiprintf_r+0x13a>
 8000dbc:	9207      	str	r2, [sp, #28]
 8000dbe:	e014      	b.n	8000dea <_vfiprintf_r+0x13a>
 8000dc0:	eba0 0308 	sub.w	r3, r0, r8
 8000dc4:	fa09 f303 	lsl.w	r3, r9, r3
 8000dc8:	4313      	orrs	r3, r2
 8000dca:	9304      	str	r3, [sp, #16]
 8000dcc:	46a2      	mov	sl, r4
 8000dce:	e7d2      	b.n	8000d76 <_vfiprintf_r+0xc6>
 8000dd0:	9b03      	ldr	r3, [sp, #12]
 8000dd2:	1d19      	adds	r1, r3, #4
 8000dd4:	681b      	ldr	r3, [r3, #0]
 8000dd6:	9103      	str	r1, [sp, #12]
 8000dd8:	2b00      	cmp	r3, #0
 8000dda:	bfbb      	ittet	lt
 8000ddc:	425b      	neglt	r3, r3
 8000dde:	f042 0202 	orrlt.w	r2, r2, #2
 8000de2:	9307      	strge	r3, [sp, #28]
 8000de4:	9307      	strlt	r3, [sp, #28]
 8000de6:	bfb8      	it	lt
 8000de8:	9204      	strlt	r2, [sp, #16]
 8000dea:	7823      	ldrb	r3, [r4, #0]
 8000dec:	2b2e      	cmp	r3, #46	; 0x2e
 8000dee:	d10c      	bne.n	8000e0a <_vfiprintf_r+0x15a>
 8000df0:	7863      	ldrb	r3, [r4, #1]
 8000df2:	2b2a      	cmp	r3, #42	; 0x2a
 8000df4:	d134      	bne.n	8000e60 <_vfiprintf_r+0x1b0>
 8000df6:	9b03      	ldr	r3, [sp, #12]
 8000df8:	1d1a      	adds	r2, r3, #4
 8000dfa:	681b      	ldr	r3, [r3, #0]
 8000dfc:	9203      	str	r2, [sp, #12]
 8000dfe:	2b00      	cmp	r3, #0
 8000e00:	bfb8      	it	lt
 8000e02:	f04f 33ff 	movlt.w	r3, #4294967295
 8000e06:	3402      	adds	r4, #2
 8000e08:	9305      	str	r3, [sp, #20]
 8000e0a:	f8df a0d4 	ldr.w	sl, [pc, #212]	; 8000ee0 <_vfiprintf_r+0x230>
 8000e0e:	7821      	ldrb	r1, [r4, #0]
 8000e10:	2203      	movs	r2, #3
 8000e12:	4650      	mov	r0, sl
 8000e14:	f7ff f9e4 	bl	80001e0 <memchr>
 8000e18:	b138      	cbz	r0, 8000e2a <_vfiprintf_r+0x17a>
 8000e1a:	9b04      	ldr	r3, [sp, #16]
 8000e1c:	eba0 000a 	sub.w	r0, r0, sl
 8000e20:	2240      	movs	r2, #64	; 0x40
 8000e22:	4082      	lsls	r2, r0
 8000e24:	4313      	orrs	r3, r2
 8000e26:	3401      	adds	r4, #1
 8000e28:	9304      	str	r3, [sp, #16]
 8000e2a:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000e2e:	4829      	ldr	r0, [pc, #164]	; (8000ed4 <_vfiprintf_r+0x224>)
 8000e30:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8000e34:	2206      	movs	r2, #6
 8000e36:	f7ff f9d3 	bl	80001e0 <memchr>
 8000e3a:	2800      	cmp	r0, #0
 8000e3c:	d03f      	beq.n	8000ebe <_vfiprintf_r+0x20e>
 8000e3e:	4b26      	ldr	r3, [pc, #152]	; (8000ed8 <_vfiprintf_r+0x228>)
 8000e40:	bb1b      	cbnz	r3, 8000e8a <_vfiprintf_r+0x1da>
 8000e42:	9b03      	ldr	r3, [sp, #12]
 8000e44:	3307      	adds	r3, #7
 8000e46:	f023 0307 	bic.w	r3, r3, #7
 8000e4a:	3308      	adds	r3, #8
 8000e4c:	9303      	str	r3, [sp, #12]
 8000e4e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8000e50:	443b      	add	r3, r7
 8000e52:	9309      	str	r3, [sp, #36]	; 0x24
 8000e54:	e768      	b.n	8000d28 <_vfiprintf_r+0x78>
 8000e56:	fb0c 3202 	mla	r2, ip, r2, r3
 8000e5a:	460c      	mov	r4, r1
 8000e5c:	2001      	movs	r0, #1
 8000e5e:	e7a6      	b.n	8000dae <_vfiprintf_r+0xfe>
 8000e60:	2300      	movs	r3, #0
 8000e62:	3401      	adds	r4, #1
 8000e64:	9305      	str	r3, [sp, #20]
 8000e66:	4619      	mov	r1, r3
 8000e68:	f04f 0c0a 	mov.w	ip, #10
 8000e6c:	4620      	mov	r0, r4
 8000e6e:	f810 2b01 	ldrb.w	r2, [r0], #1
 8000e72:	3a30      	subs	r2, #48	; 0x30
 8000e74:	2a09      	cmp	r2, #9
 8000e76:	d903      	bls.n	8000e80 <_vfiprintf_r+0x1d0>
 8000e78:	2b00      	cmp	r3, #0
 8000e7a:	d0c6      	beq.n	8000e0a <_vfiprintf_r+0x15a>
 8000e7c:	9105      	str	r1, [sp, #20]
 8000e7e:	e7c4      	b.n	8000e0a <_vfiprintf_r+0x15a>
 8000e80:	fb0c 2101 	mla	r1, ip, r1, r2
 8000e84:	4604      	mov	r4, r0
 8000e86:	2301      	movs	r3, #1
 8000e88:	e7f0      	b.n	8000e6c <_vfiprintf_r+0x1bc>
 8000e8a:	ab03      	add	r3, sp, #12
 8000e8c:	9300      	str	r3, [sp, #0]
 8000e8e:	462a      	mov	r2, r5
 8000e90:	4b12      	ldr	r3, [pc, #72]	; (8000edc <_vfiprintf_r+0x22c>)
 8000e92:	a904      	add	r1, sp, #16
 8000e94:	4630      	mov	r0, r6
 8000e96:	f3af 8000 	nop.w
 8000e9a:	4607      	mov	r7, r0
 8000e9c:	1c78      	adds	r0, r7, #1
 8000e9e:	d1d6      	bne.n	8000e4e <_vfiprintf_r+0x19e>
 8000ea0:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8000ea2:	07d9      	lsls	r1, r3, #31
 8000ea4:	d405      	bmi.n	8000eb2 <_vfiprintf_r+0x202>
 8000ea6:	89ab      	ldrh	r3, [r5, #12]
 8000ea8:	059a      	lsls	r2, r3, #22
 8000eaa:	d402      	bmi.n	8000eb2 <_vfiprintf_r+0x202>
 8000eac:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8000eae:	f7ff fddb 	bl	8000a68 <__retarget_lock_release_recursive>
 8000eb2:	89ab      	ldrh	r3, [r5, #12]
 8000eb4:	065b      	lsls	r3, r3, #25
 8000eb6:	f53f af1d 	bmi.w	8000cf4 <_vfiprintf_r+0x44>
 8000eba:	9809      	ldr	r0, [sp, #36]	; 0x24
 8000ebc:	e71c      	b.n	8000cf8 <_vfiprintf_r+0x48>
 8000ebe:	ab03      	add	r3, sp, #12
 8000ec0:	9300      	str	r3, [sp, #0]
 8000ec2:	462a      	mov	r2, r5
 8000ec4:	4b05      	ldr	r3, [pc, #20]	; (8000edc <_vfiprintf_r+0x22c>)
 8000ec6:	a904      	add	r1, sp, #16
 8000ec8:	4630      	mov	r0, r6
 8000eca:	f000 f879 	bl	8000fc0 <_printf_i>
 8000ece:	e7e4      	b.n	8000e9a <_vfiprintf_r+0x1ea>
 8000ed0:	08001977 	.word	0x08001977
 8000ed4:	08001981 	.word	0x08001981
 8000ed8:	00000000 	.word	0x00000000
 8000edc:	08000c8b 	.word	0x08000c8b
 8000ee0:	0800197d 	.word	0x0800197d

08000ee4 <_printf_common>:
 8000ee4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000ee8:	4616      	mov	r6, r2
 8000eea:	4699      	mov	r9, r3
 8000eec:	688a      	ldr	r2, [r1, #8]
 8000eee:	690b      	ldr	r3, [r1, #16]
 8000ef0:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8000ef4:	4293      	cmp	r3, r2
 8000ef6:	bfb8      	it	lt
 8000ef8:	4613      	movlt	r3, r2
 8000efa:	6033      	str	r3, [r6, #0]
 8000efc:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8000f00:	4607      	mov	r7, r0
 8000f02:	460c      	mov	r4, r1
 8000f04:	b10a      	cbz	r2, 8000f0a <_printf_common+0x26>
 8000f06:	3301      	adds	r3, #1
 8000f08:	6033      	str	r3, [r6, #0]
 8000f0a:	6823      	ldr	r3, [r4, #0]
 8000f0c:	0699      	lsls	r1, r3, #26
 8000f0e:	bf42      	ittt	mi
 8000f10:	6833      	ldrmi	r3, [r6, #0]
 8000f12:	3302      	addmi	r3, #2
 8000f14:	6033      	strmi	r3, [r6, #0]
 8000f16:	6825      	ldr	r5, [r4, #0]
 8000f18:	f015 0506 	ands.w	r5, r5, #6
 8000f1c:	d106      	bne.n	8000f2c <_printf_common+0x48>
 8000f1e:	f104 0a19 	add.w	sl, r4, #25
 8000f22:	68e3      	ldr	r3, [r4, #12]
 8000f24:	6832      	ldr	r2, [r6, #0]
 8000f26:	1a9b      	subs	r3, r3, r2
 8000f28:	42ab      	cmp	r3, r5
 8000f2a:	dc26      	bgt.n	8000f7a <_printf_common+0x96>
 8000f2c:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 8000f30:	1e13      	subs	r3, r2, #0
 8000f32:	6822      	ldr	r2, [r4, #0]
 8000f34:	bf18      	it	ne
 8000f36:	2301      	movne	r3, #1
 8000f38:	0692      	lsls	r2, r2, #26
 8000f3a:	d42b      	bmi.n	8000f94 <_printf_common+0xb0>
 8000f3c:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8000f40:	4649      	mov	r1, r9
 8000f42:	4638      	mov	r0, r7
 8000f44:	47c0      	blx	r8
 8000f46:	3001      	adds	r0, #1
 8000f48:	d01e      	beq.n	8000f88 <_printf_common+0xa4>
 8000f4a:	6823      	ldr	r3, [r4, #0]
 8000f4c:	6922      	ldr	r2, [r4, #16]
 8000f4e:	f003 0306 	and.w	r3, r3, #6
 8000f52:	2b04      	cmp	r3, #4
 8000f54:	bf02      	ittt	eq
 8000f56:	68e5      	ldreq	r5, [r4, #12]
 8000f58:	6833      	ldreq	r3, [r6, #0]
 8000f5a:	1aed      	subeq	r5, r5, r3
 8000f5c:	68a3      	ldr	r3, [r4, #8]
 8000f5e:	bf0c      	ite	eq
 8000f60:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8000f64:	2500      	movne	r5, #0
 8000f66:	4293      	cmp	r3, r2
 8000f68:	bfc4      	itt	gt
 8000f6a:	1a9b      	subgt	r3, r3, r2
 8000f6c:	18ed      	addgt	r5, r5, r3
 8000f6e:	2600      	movs	r6, #0
 8000f70:	341a      	adds	r4, #26
 8000f72:	42b5      	cmp	r5, r6
 8000f74:	d11a      	bne.n	8000fac <_printf_common+0xc8>
 8000f76:	2000      	movs	r0, #0
 8000f78:	e008      	b.n	8000f8c <_printf_common+0xa8>
 8000f7a:	2301      	movs	r3, #1
 8000f7c:	4652      	mov	r2, sl
 8000f7e:	4649      	mov	r1, r9
 8000f80:	4638      	mov	r0, r7
 8000f82:	47c0      	blx	r8
 8000f84:	3001      	adds	r0, #1
 8000f86:	d103      	bne.n	8000f90 <_printf_common+0xac>
 8000f88:	f04f 30ff 	mov.w	r0, #4294967295
 8000f8c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000f90:	3501      	adds	r5, #1
 8000f92:	e7c6      	b.n	8000f22 <_printf_common+0x3e>
 8000f94:	18e1      	adds	r1, r4, r3
 8000f96:	1c5a      	adds	r2, r3, #1
 8000f98:	2030      	movs	r0, #48	; 0x30
 8000f9a:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 8000f9e:	4422      	add	r2, r4
 8000fa0:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8000fa4:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8000fa8:	3302      	adds	r3, #2
 8000faa:	e7c7      	b.n	8000f3c <_printf_common+0x58>
 8000fac:	2301      	movs	r3, #1
 8000fae:	4622      	mov	r2, r4
 8000fb0:	4649      	mov	r1, r9
 8000fb2:	4638      	mov	r0, r7
 8000fb4:	47c0      	blx	r8
 8000fb6:	3001      	adds	r0, #1
 8000fb8:	d0e6      	beq.n	8000f88 <_printf_common+0xa4>
 8000fba:	3601      	adds	r6, #1
 8000fbc:	e7d9      	b.n	8000f72 <_printf_common+0x8e>
	...

08000fc0 <_printf_i>:
 8000fc0:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8000fc4:	7e0f      	ldrb	r7, [r1, #24]
 8000fc6:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8000fc8:	2f78      	cmp	r7, #120	; 0x78
 8000fca:	4691      	mov	r9, r2
 8000fcc:	4680      	mov	r8, r0
 8000fce:	460c      	mov	r4, r1
 8000fd0:	469a      	mov	sl, r3
 8000fd2:	f101 0243 	add.w	r2, r1, #67	; 0x43
 8000fd6:	d807      	bhi.n	8000fe8 <_printf_i+0x28>
 8000fd8:	2f62      	cmp	r7, #98	; 0x62
 8000fda:	d80a      	bhi.n	8000ff2 <_printf_i+0x32>
 8000fdc:	2f00      	cmp	r7, #0
 8000fde:	f000 80d4 	beq.w	800118a <_printf_i+0x1ca>
 8000fe2:	2f58      	cmp	r7, #88	; 0x58
 8000fe4:	f000 80c0 	beq.w	8001168 <_printf_i+0x1a8>
 8000fe8:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8000fec:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 8000ff0:	e03a      	b.n	8001068 <_printf_i+0xa8>
 8000ff2:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 8000ff6:	2b15      	cmp	r3, #21
 8000ff8:	d8f6      	bhi.n	8000fe8 <_printf_i+0x28>
 8000ffa:	a101      	add	r1, pc, #4	; (adr r1, 8001000 <_printf_i+0x40>)
 8000ffc:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8001000:	08001059 	.word	0x08001059
 8001004:	0800106d 	.word	0x0800106d
 8001008:	08000fe9 	.word	0x08000fe9
 800100c:	08000fe9 	.word	0x08000fe9
 8001010:	08000fe9 	.word	0x08000fe9
 8001014:	08000fe9 	.word	0x08000fe9
 8001018:	0800106d 	.word	0x0800106d
 800101c:	08000fe9 	.word	0x08000fe9
 8001020:	08000fe9 	.word	0x08000fe9
 8001024:	08000fe9 	.word	0x08000fe9
 8001028:	08000fe9 	.word	0x08000fe9
 800102c:	08001171 	.word	0x08001171
 8001030:	08001099 	.word	0x08001099
 8001034:	0800112b 	.word	0x0800112b
 8001038:	08000fe9 	.word	0x08000fe9
 800103c:	08000fe9 	.word	0x08000fe9
 8001040:	08001193 	.word	0x08001193
 8001044:	08000fe9 	.word	0x08000fe9
 8001048:	08001099 	.word	0x08001099
 800104c:	08000fe9 	.word	0x08000fe9
 8001050:	08000fe9 	.word	0x08000fe9
 8001054:	08001133 	.word	0x08001133
 8001058:	682b      	ldr	r3, [r5, #0]
 800105a:	1d1a      	adds	r2, r3, #4
 800105c:	681b      	ldr	r3, [r3, #0]
 800105e:	602a      	str	r2, [r5, #0]
 8001060:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8001064:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8001068:	2301      	movs	r3, #1
 800106a:	e09f      	b.n	80011ac <_printf_i+0x1ec>
 800106c:	6820      	ldr	r0, [r4, #0]
 800106e:	682b      	ldr	r3, [r5, #0]
 8001070:	0607      	lsls	r7, r0, #24
 8001072:	f103 0104 	add.w	r1, r3, #4
 8001076:	6029      	str	r1, [r5, #0]
 8001078:	d501      	bpl.n	800107e <_printf_i+0xbe>
 800107a:	681e      	ldr	r6, [r3, #0]
 800107c:	e003      	b.n	8001086 <_printf_i+0xc6>
 800107e:	0646      	lsls	r6, r0, #25
 8001080:	d5fb      	bpl.n	800107a <_printf_i+0xba>
 8001082:	f9b3 6000 	ldrsh.w	r6, [r3]
 8001086:	2e00      	cmp	r6, #0
 8001088:	da03      	bge.n	8001092 <_printf_i+0xd2>
 800108a:	232d      	movs	r3, #45	; 0x2d
 800108c:	4276      	negs	r6, r6
 800108e:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8001092:	485a      	ldr	r0, [pc, #360]	; (80011fc <_printf_i+0x23c>)
 8001094:	230a      	movs	r3, #10
 8001096:	e012      	b.n	80010be <_printf_i+0xfe>
 8001098:	682b      	ldr	r3, [r5, #0]
 800109a:	6820      	ldr	r0, [r4, #0]
 800109c:	1d19      	adds	r1, r3, #4
 800109e:	6029      	str	r1, [r5, #0]
 80010a0:	0605      	lsls	r5, r0, #24
 80010a2:	d501      	bpl.n	80010a8 <_printf_i+0xe8>
 80010a4:	681e      	ldr	r6, [r3, #0]
 80010a6:	e002      	b.n	80010ae <_printf_i+0xee>
 80010a8:	0641      	lsls	r1, r0, #25
 80010aa:	d5fb      	bpl.n	80010a4 <_printf_i+0xe4>
 80010ac:	881e      	ldrh	r6, [r3, #0]
 80010ae:	4853      	ldr	r0, [pc, #332]	; (80011fc <_printf_i+0x23c>)
 80010b0:	2f6f      	cmp	r7, #111	; 0x6f
 80010b2:	bf0c      	ite	eq
 80010b4:	2308      	moveq	r3, #8
 80010b6:	230a      	movne	r3, #10
 80010b8:	2100      	movs	r1, #0
 80010ba:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 80010be:	6865      	ldr	r5, [r4, #4]
 80010c0:	60a5      	str	r5, [r4, #8]
 80010c2:	2d00      	cmp	r5, #0
 80010c4:	bfa2      	ittt	ge
 80010c6:	6821      	ldrge	r1, [r4, #0]
 80010c8:	f021 0104 	bicge.w	r1, r1, #4
 80010cc:	6021      	strge	r1, [r4, #0]
 80010ce:	b90e      	cbnz	r6, 80010d4 <_printf_i+0x114>
 80010d0:	2d00      	cmp	r5, #0
 80010d2:	d04b      	beq.n	800116c <_printf_i+0x1ac>
 80010d4:	4615      	mov	r5, r2
 80010d6:	fbb6 f1f3 	udiv	r1, r6, r3
 80010da:	fb03 6711 	mls	r7, r3, r1, r6
 80010de:	5dc7      	ldrb	r7, [r0, r7]
 80010e0:	f805 7d01 	strb.w	r7, [r5, #-1]!
 80010e4:	4637      	mov	r7, r6
 80010e6:	42bb      	cmp	r3, r7
 80010e8:	460e      	mov	r6, r1
 80010ea:	d9f4      	bls.n	80010d6 <_printf_i+0x116>
 80010ec:	2b08      	cmp	r3, #8
 80010ee:	d10b      	bne.n	8001108 <_printf_i+0x148>
 80010f0:	6823      	ldr	r3, [r4, #0]
 80010f2:	07de      	lsls	r6, r3, #31
 80010f4:	d508      	bpl.n	8001108 <_printf_i+0x148>
 80010f6:	6923      	ldr	r3, [r4, #16]
 80010f8:	6861      	ldr	r1, [r4, #4]
 80010fa:	4299      	cmp	r1, r3
 80010fc:	bfde      	ittt	le
 80010fe:	2330      	movle	r3, #48	; 0x30
 8001100:	f805 3c01 	strble.w	r3, [r5, #-1]
 8001104:	f105 35ff 	addle.w	r5, r5, #4294967295
 8001108:	1b52      	subs	r2, r2, r5
 800110a:	6122      	str	r2, [r4, #16]
 800110c:	f8cd a000 	str.w	sl, [sp]
 8001110:	464b      	mov	r3, r9
 8001112:	aa03      	add	r2, sp, #12
 8001114:	4621      	mov	r1, r4
 8001116:	4640      	mov	r0, r8
 8001118:	f7ff fee4 	bl	8000ee4 <_printf_common>
 800111c:	3001      	adds	r0, #1
 800111e:	d14a      	bne.n	80011b6 <_printf_i+0x1f6>
 8001120:	f04f 30ff 	mov.w	r0, #4294967295
 8001124:	b004      	add	sp, #16
 8001126:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800112a:	6823      	ldr	r3, [r4, #0]
 800112c:	f043 0320 	orr.w	r3, r3, #32
 8001130:	6023      	str	r3, [r4, #0]
 8001132:	4833      	ldr	r0, [pc, #204]	; (8001200 <_printf_i+0x240>)
 8001134:	2778      	movs	r7, #120	; 0x78
 8001136:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
 800113a:	6823      	ldr	r3, [r4, #0]
 800113c:	6829      	ldr	r1, [r5, #0]
 800113e:	061f      	lsls	r7, r3, #24
 8001140:	f851 6b04 	ldr.w	r6, [r1], #4
 8001144:	d402      	bmi.n	800114c <_printf_i+0x18c>
 8001146:	065f      	lsls	r7, r3, #25
 8001148:	bf48      	it	mi
 800114a:	b2b6      	uxthmi	r6, r6
 800114c:	07df      	lsls	r7, r3, #31
 800114e:	bf48      	it	mi
 8001150:	f043 0320 	orrmi.w	r3, r3, #32
 8001154:	6029      	str	r1, [r5, #0]
 8001156:	bf48      	it	mi
 8001158:	6023      	strmi	r3, [r4, #0]
 800115a:	b91e      	cbnz	r6, 8001164 <_printf_i+0x1a4>
 800115c:	6823      	ldr	r3, [r4, #0]
 800115e:	f023 0320 	bic.w	r3, r3, #32
 8001162:	6023      	str	r3, [r4, #0]
 8001164:	2310      	movs	r3, #16
 8001166:	e7a7      	b.n	80010b8 <_printf_i+0xf8>
 8001168:	4824      	ldr	r0, [pc, #144]	; (80011fc <_printf_i+0x23c>)
 800116a:	e7e4      	b.n	8001136 <_printf_i+0x176>
 800116c:	4615      	mov	r5, r2
 800116e:	e7bd      	b.n	80010ec <_printf_i+0x12c>
 8001170:	682b      	ldr	r3, [r5, #0]
 8001172:	6826      	ldr	r6, [r4, #0]
 8001174:	6961      	ldr	r1, [r4, #20]
 8001176:	1d18      	adds	r0, r3, #4
 8001178:	6028      	str	r0, [r5, #0]
 800117a:	0635      	lsls	r5, r6, #24
 800117c:	681b      	ldr	r3, [r3, #0]
 800117e:	d501      	bpl.n	8001184 <_printf_i+0x1c4>
 8001180:	6019      	str	r1, [r3, #0]
 8001182:	e002      	b.n	800118a <_printf_i+0x1ca>
 8001184:	0670      	lsls	r0, r6, #25
 8001186:	d5fb      	bpl.n	8001180 <_printf_i+0x1c0>
 8001188:	8019      	strh	r1, [r3, #0]
 800118a:	2300      	movs	r3, #0
 800118c:	6123      	str	r3, [r4, #16]
 800118e:	4615      	mov	r5, r2
 8001190:	e7bc      	b.n	800110c <_printf_i+0x14c>
 8001192:	682b      	ldr	r3, [r5, #0]
 8001194:	1d1a      	adds	r2, r3, #4
 8001196:	602a      	str	r2, [r5, #0]
 8001198:	681d      	ldr	r5, [r3, #0]
 800119a:	6862      	ldr	r2, [r4, #4]
 800119c:	2100      	movs	r1, #0
 800119e:	4628      	mov	r0, r5
 80011a0:	f7ff f81e 	bl	80001e0 <memchr>
 80011a4:	b108      	cbz	r0, 80011aa <_printf_i+0x1ea>
 80011a6:	1b40      	subs	r0, r0, r5
 80011a8:	6060      	str	r0, [r4, #4]
 80011aa:	6863      	ldr	r3, [r4, #4]
 80011ac:	6123      	str	r3, [r4, #16]
 80011ae:	2300      	movs	r3, #0
 80011b0:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 80011b4:	e7aa      	b.n	800110c <_printf_i+0x14c>
 80011b6:	6923      	ldr	r3, [r4, #16]
 80011b8:	462a      	mov	r2, r5
 80011ba:	4649      	mov	r1, r9
 80011bc:	4640      	mov	r0, r8
 80011be:	47d0      	blx	sl
 80011c0:	3001      	adds	r0, #1
 80011c2:	d0ad      	beq.n	8001120 <_printf_i+0x160>
 80011c4:	6823      	ldr	r3, [r4, #0]
 80011c6:	079b      	lsls	r3, r3, #30
 80011c8:	d413      	bmi.n	80011f2 <_printf_i+0x232>
 80011ca:	68e0      	ldr	r0, [r4, #12]
 80011cc:	9b03      	ldr	r3, [sp, #12]
 80011ce:	4298      	cmp	r0, r3
 80011d0:	bfb8      	it	lt
 80011d2:	4618      	movlt	r0, r3
 80011d4:	e7a6      	b.n	8001124 <_printf_i+0x164>
 80011d6:	2301      	movs	r3, #1
 80011d8:	4632      	mov	r2, r6
 80011da:	4649      	mov	r1, r9
 80011dc:	4640      	mov	r0, r8
 80011de:	47d0      	blx	sl
 80011e0:	3001      	adds	r0, #1
 80011e2:	d09d      	beq.n	8001120 <_printf_i+0x160>
 80011e4:	3501      	adds	r5, #1
 80011e6:	68e3      	ldr	r3, [r4, #12]
 80011e8:	9903      	ldr	r1, [sp, #12]
 80011ea:	1a5b      	subs	r3, r3, r1
 80011ec:	42ab      	cmp	r3, r5
 80011ee:	dcf2      	bgt.n	80011d6 <_printf_i+0x216>
 80011f0:	e7eb      	b.n	80011ca <_printf_i+0x20a>
 80011f2:	2500      	movs	r5, #0
 80011f4:	f104 0619 	add.w	r6, r4, #25
 80011f8:	e7f5      	b.n	80011e6 <_printf_i+0x226>
 80011fa:	bf00      	nop
 80011fc:	08001988 	.word	0x08001988
 8001200:	08001999 	.word	0x08001999

08001204 <__sflush_r>:
 8001204:	898a      	ldrh	r2, [r1, #12]
 8001206:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800120a:	4605      	mov	r5, r0
 800120c:	0710      	lsls	r0, r2, #28
 800120e:	460c      	mov	r4, r1
 8001210:	d458      	bmi.n	80012c4 <__sflush_r+0xc0>
 8001212:	684b      	ldr	r3, [r1, #4]
 8001214:	2b00      	cmp	r3, #0
 8001216:	dc05      	bgt.n	8001224 <__sflush_r+0x20>
 8001218:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 800121a:	2b00      	cmp	r3, #0
 800121c:	dc02      	bgt.n	8001224 <__sflush_r+0x20>
 800121e:	2000      	movs	r0, #0
 8001220:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8001224:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8001226:	2e00      	cmp	r6, #0
 8001228:	d0f9      	beq.n	800121e <__sflush_r+0x1a>
 800122a:	2300      	movs	r3, #0
 800122c:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 8001230:	682f      	ldr	r7, [r5, #0]
 8001232:	6a21      	ldr	r1, [r4, #32]
 8001234:	602b      	str	r3, [r5, #0]
 8001236:	d032      	beq.n	800129e <__sflush_r+0x9a>
 8001238:	6d60      	ldr	r0, [r4, #84]	; 0x54
 800123a:	89a3      	ldrh	r3, [r4, #12]
 800123c:	075a      	lsls	r2, r3, #29
 800123e:	d505      	bpl.n	800124c <__sflush_r+0x48>
 8001240:	6863      	ldr	r3, [r4, #4]
 8001242:	1ac0      	subs	r0, r0, r3
 8001244:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8001246:	b10b      	cbz	r3, 800124c <__sflush_r+0x48>
 8001248:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800124a:	1ac0      	subs	r0, r0, r3
 800124c:	2300      	movs	r3, #0
 800124e:	4602      	mov	r2, r0
 8001250:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8001252:	6a21      	ldr	r1, [r4, #32]
 8001254:	4628      	mov	r0, r5
 8001256:	47b0      	blx	r6
 8001258:	1c43      	adds	r3, r0, #1
 800125a:	89a3      	ldrh	r3, [r4, #12]
 800125c:	d106      	bne.n	800126c <__sflush_r+0x68>
 800125e:	6829      	ldr	r1, [r5, #0]
 8001260:	291d      	cmp	r1, #29
 8001262:	d82b      	bhi.n	80012bc <__sflush_r+0xb8>
 8001264:	4a29      	ldr	r2, [pc, #164]	; (800130c <__sflush_r+0x108>)
 8001266:	410a      	asrs	r2, r1
 8001268:	07d6      	lsls	r6, r2, #31
 800126a:	d427      	bmi.n	80012bc <__sflush_r+0xb8>
 800126c:	2200      	movs	r2, #0
 800126e:	6062      	str	r2, [r4, #4]
 8001270:	04d9      	lsls	r1, r3, #19
 8001272:	6922      	ldr	r2, [r4, #16]
 8001274:	6022      	str	r2, [r4, #0]
 8001276:	d504      	bpl.n	8001282 <__sflush_r+0x7e>
 8001278:	1c42      	adds	r2, r0, #1
 800127a:	d101      	bne.n	8001280 <__sflush_r+0x7c>
 800127c:	682b      	ldr	r3, [r5, #0]
 800127e:	b903      	cbnz	r3, 8001282 <__sflush_r+0x7e>
 8001280:	6560      	str	r0, [r4, #84]	; 0x54
 8001282:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8001284:	602f      	str	r7, [r5, #0]
 8001286:	2900      	cmp	r1, #0
 8001288:	d0c9      	beq.n	800121e <__sflush_r+0x1a>
 800128a:	f104 0344 	add.w	r3, r4, #68	; 0x44
 800128e:	4299      	cmp	r1, r3
 8001290:	d002      	beq.n	8001298 <__sflush_r+0x94>
 8001292:	4628      	mov	r0, r5
 8001294:	f7ff fbea 	bl	8000a6c <_free_r>
 8001298:	2000      	movs	r0, #0
 800129a:	6360      	str	r0, [r4, #52]	; 0x34
 800129c:	e7c0      	b.n	8001220 <__sflush_r+0x1c>
 800129e:	2301      	movs	r3, #1
 80012a0:	4628      	mov	r0, r5
 80012a2:	47b0      	blx	r6
 80012a4:	1c41      	adds	r1, r0, #1
 80012a6:	d1c8      	bne.n	800123a <__sflush_r+0x36>
 80012a8:	682b      	ldr	r3, [r5, #0]
 80012aa:	2b00      	cmp	r3, #0
 80012ac:	d0c5      	beq.n	800123a <__sflush_r+0x36>
 80012ae:	2b1d      	cmp	r3, #29
 80012b0:	d001      	beq.n	80012b6 <__sflush_r+0xb2>
 80012b2:	2b16      	cmp	r3, #22
 80012b4:	d101      	bne.n	80012ba <__sflush_r+0xb6>
 80012b6:	602f      	str	r7, [r5, #0]
 80012b8:	e7b1      	b.n	800121e <__sflush_r+0x1a>
 80012ba:	89a3      	ldrh	r3, [r4, #12]
 80012bc:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80012c0:	81a3      	strh	r3, [r4, #12]
 80012c2:	e7ad      	b.n	8001220 <__sflush_r+0x1c>
 80012c4:	690f      	ldr	r7, [r1, #16]
 80012c6:	2f00      	cmp	r7, #0
 80012c8:	d0a9      	beq.n	800121e <__sflush_r+0x1a>
 80012ca:	0793      	lsls	r3, r2, #30
 80012cc:	680e      	ldr	r6, [r1, #0]
 80012ce:	bf08      	it	eq
 80012d0:	694b      	ldreq	r3, [r1, #20]
 80012d2:	600f      	str	r7, [r1, #0]
 80012d4:	bf18      	it	ne
 80012d6:	2300      	movne	r3, #0
 80012d8:	eba6 0807 	sub.w	r8, r6, r7
 80012dc:	608b      	str	r3, [r1, #8]
 80012de:	f1b8 0f00 	cmp.w	r8, #0
 80012e2:	dd9c      	ble.n	800121e <__sflush_r+0x1a>
 80012e4:	6a21      	ldr	r1, [r4, #32]
 80012e6:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 80012e8:	4643      	mov	r3, r8
 80012ea:	463a      	mov	r2, r7
 80012ec:	4628      	mov	r0, r5
 80012ee:	47b0      	blx	r6
 80012f0:	2800      	cmp	r0, #0
 80012f2:	dc06      	bgt.n	8001302 <__sflush_r+0xfe>
 80012f4:	89a3      	ldrh	r3, [r4, #12]
 80012f6:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80012fa:	81a3      	strh	r3, [r4, #12]
 80012fc:	f04f 30ff 	mov.w	r0, #4294967295
 8001300:	e78e      	b.n	8001220 <__sflush_r+0x1c>
 8001302:	4407      	add	r7, r0
 8001304:	eba8 0800 	sub.w	r8, r8, r0
 8001308:	e7e9      	b.n	80012de <__sflush_r+0xda>
 800130a:	bf00      	nop
 800130c:	dfbffffe 	.word	0xdfbffffe

08001310 <_fflush_r>:
 8001310:	b538      	push	{r3, r4, r5, lr}
 8001312:	690b      	ldr	r3, [r1, #16]
 8001314:	4605      	mov	r5, r0
 8001316:	460c      	mov	r4, r1
 8001318:	b913      	cbnz	r3, 8001320 <_fflush_r+0x10>
 800131a:	2500      	movs	r5, #0
 800131c:	4628      	mov	r0, r5
 800131e:	bd38      	pop	{r3, r4, r5, pc}
 8001320:	b118      	cbz	r0, 800132a <_fflush_r+0x1a>
 8001322:	6a03      	ldr	r3, [r0, #32]
 8001324:	b90b      	cbnz	r3, 800132a <_fflush_r+0x1a>
 8001326:	f7ff f9a9 	bl	800067c <__sinit>
 800132a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800132e:	2b00      	cmp	r3, #0
 8001330:	d0f3      	beq.n	800131a <_fflush_r+0xa>
 8001332:	6e62      	ldr	r2, [r4, #100]	; 0x64
 8001334:	07d0      	lsls	r0, r2, #31
 8001336:	d404      	bmi.n	8001342 <_fflush_r+0x32>
 8001338:	0599      	lsls	r1, r3, #22
 800133a:	d402      	bmi.n	8001342 <_fflush_r+0x32>
 800133c:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800133e:	f7ff fb92 	bl	8000a66 <__retarget_lock_acquire_recursive>
 8001342:	4628      	mov	r0, r5
 8001344:	4621      	mov	r1, r4
 8001346:	f7ff ff5d 	bl	8001204 <__sflush_r>
 800134a:	6e63      	ldr	r3, [r4, #100]	; 0x64
 800134c:	07da      	lsls	r2, r3, #31
 800134e:	4605      	mov	r5, r0
 8001350:	d4e4      	bmi.n	800131c <_fflush_r+0xc>
 8001352:	89a3      	ldrh	r3, [r4, #12]
 8001354:	059b      	lsls	r3, r3, #22
 8001356:	d4e1      	bmi.n	800131c <_fflush_r+0xc>
 8001358:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800135a:	f7ff fb85 	bl	8000a68 <__retarget_lock_release_recursive>
 800135e:	e7dd      	b.n	800131c <_fflush_r+0xc>

08001360 <__swhatbuf_r>:
 8001360:	b570      	push	{r4, r5, r6, lr}
 8001362:	460c      	mov	r4, r1
 8001364:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8001368:	2900      	cmp	r1, #0
 800136a:	b096      	sub	sp, #88	; 0x58
 800136c:	4615      	mov	r5, r2
 800136e:	461e      	mov	r6, r3
 8001370:	da0d      	bge.n	800138e <__swhatbuf_r+0x2e>
 8001372:	89a3      	ldrh	r3, [r4, #12]
 8001374:	f013 0f80 	tst.w	r3, #128	; 0x80
 8001378:	f04f 0100 	mov.w	r1, #0
 800137c:	bf0c      	ite	eq
 800137e:	f44f 6380 	moveq.w	r3, #1024	; 0x400
 8001382:	2340      	movne	r3, #64	; 0x40
 8001384:	2000      	movs	r0, #0
 8001386:	6031      	str	r1, [r6, #0]
 8001388:	602b      	str	r3, [r5, #0]
 800138a:	b016      	add	sp, #88	; 0x58
 800138c:	bd70      	pop	{r4, r5, r6, pc}
 800138e:	466a      	mov	r2, sp
 8001390:	f000 f848 	bl	8001424 <_fstat_r>
 8001394:	2800      	cmp	r0, #0
 8001396:	dbec      	blt.n	8001372 <__swhatbuf_r+0x12>
 8001398:	9901      	ldr	r1, [sp, #4]
 800139a:	f401 4170 	and.w	r1, r1, #61440	; 0xf000
 800139e:	f5a1 5300 	sub.w	r3, r1, #8192	; 0x2000
 80013a2:	4259      	negs	r1, r3
 80013a4:	4159      	adcs	r1, r3
 80013a6:	f44f 6380 	mov.w	r3, #1024	; 0x400
 80013aa:	e7eb      	b.n	8001384 <__swhatbuf_r+0x24>

080013ac <__smakebuf_r>:
 80013ac:	898b      	ldrh	r3, [r1, #12]
 80013ae:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80013b0:	079d      	lsls	r5, r3, #30
 80013b2:	4606      	mov	r6, r0
 80013b4:	460c      	mov	r4, r1
 80013b6:	d507      	bpl.n	80013c8 <__smakebuf_r+0x1c>
 80013b8:	f104 0347 	add.w	r3, r4, #71	; 0x47
 80013bc:	6023      	str	r3, [r4, #0]
 80013be:	6123      	str	r3, [r4, #16]
 80013c0:	2301      	movs	r3, #1
 80013c2:	6163      	str	r3, [r4, #20]
 80013c4:	b002      	add	sp, #8
 80013c6:	bd70      	pop	{r4, r5, r6, pc}
 80013c8:	ab01      	add	r3, sp, #4
 80013ca:	466a      	mov	r2, sp
 80013cc:	f7ff ffc8 	bl	8001360 <__swhatbuf_r>
 80013d0:	9900      	ldr	r1, [sp, #0]
 80013d2:	4605      	mov	r5, r0
 80013d4:	4630      	mov	r0, r6
 80013d6:	f7ff fbb5 	bl	8000b44 <_malloc_r>
 80013da:	b948      	cbnz	r0, 80013f0 <__smakebuf_r+0x44>
 80013dc:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80013e0:	059a      	lsls	r2, r3, #22
 80013e2:	d4ef      	bmi.n	80013c4 <__smakebuf_r+0x18>
 80013e4:	f023 0303 	bic.w	r3, r3, #3
 80013e8:	f043 0302 	orr.w	r3, r3, #2
 80013ec:	81a3      	strh	r3, [r4, #12]
 80013ee:	e7e3      	b.n	80013b8 <__smakebuf_r+0xc>
 80013f0:	89a3      	ldrh	r3, [r4, #12]
 80013f2:	6020      	str	r0, [r4, #0]
 80013f4:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80013f8:	81a3      	strh	r3, [r4, #12]
 80013fa:	9b00      	ldr	r3, [sp, #0]
 80013fc:	6163      	str	r3, [r4, #20]
 80013fe:	9b01      	ldr	r3, [sp, #4]
 8001400:	6120      	str	r0, [r4, #16]
 8001402:	b15b      	cbz	r3, 800141c <__smakebuf_r+0x70>
 8001404:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8001408:	4630      	mov	r0, r6
 800140a:	f000 f81d 	bl	8001448 <_isatty_r>
 800140e:	b128      	cbz	r0, 800141c <__smakebuf_r+0x70>
 8001410:	89a3      	ldrh	r3, [r4, #12]
 8001412:	f023 0303 	bic.w	r3, r3, #3
 8001416:	f043 0301 	orr.w	r3, r3, #1
 800141a:	81a3      	strh	r3, [r4, #12]
 800141c:	89a3      	ldrh	r3, [r4, #12]
 800141e:	431d      	orrs	r5, r3
 8001420:	81a5      	strh	r5, [r4, #12]
 8001422:	e7cf      	b.n	80013c4 <__smakebuf_r+0x18>

08001424 <_fstat_r>:
 8001424:	b538      	push	{r3, r4, r5, lr}
 8001426:	4d07      	ldr	r5, [pc, #28]	; (8001444 <_fstat_r+0x20>)
 8001428:	2300      	movs	r3, #0
 800142a:	4604      	mov	r4, r0
 800142c:	4608      	mov	r0, r1
 800142e:	4611      	mov	r1, r2
 8001430:	602b      	str	r3, [r5, #0]
 8001432:	f7ff f80f 	bl	8000454 <_fstat>
 8001436:	1c43      	adds	r3, r0, #1
 8001438:	d102      	bne.n	8001440 <_fstat_r+0x1c>
 800143a:	682b      	ldr	r3, [r5, #0]
 800143c:	b103      	cbz	r3, 8001440 <_fstat_r+0x1c>
 800143e:	6023      	str	r3, [r4, #0]
 8001440:	bd38      	pop	{r3, r4, r5, pc}
 8001442:	bf00      	nop
 8001444:	200001b8 	.word	0x200001b8

08001448 <_isatty_r>:
 8001448:	b538      	push	{r3, r4, r5, lr}
 800144a:	4d06      	ldr	r5, [pc, #24]	; (8001464 <_isatty_r+0x1c>)
 800144c:	2300      	movs	r3, #0
 800144e:	4604      	mov	r4, r0
 8001450:	4608      	mov	r0, r1
 8001452:	602b      	str	r3, [r5, #0]
 8001454:	f7ff f80e 	bl	8000474 <_isatty>
 8001458:	1c43      	adds	r3, r0, #1
 800145a:	d102      	bne.n	8001462 <_isatty_r+0x1a>
 800145c:	682b      	ldr	r3, [r5, #0]
 800145e:	b103      	cbz	r3, 8001462 <_isatty_r+0x1a>
 8001460:	6023      	str	r3, [r4, #0]
 8001462:	bd38      	pop	{r3, r4, r5, pc}
 8001464:	200001b8 	.word	0x200001b8

08001468 <_sbrk_r>:
 8001468:	b538      	push	{r3, r4, r5, lr}
 800146a:	4d06      	ldr	r5, [pc, #24]	; (8001484 <_sbrk_r+0x1c>)
 800146c:	2300      	movs	r3, #0
 800146e:	4604      	mov	r4, r0
 8001470:	4608      	mov	r0, r1
 8001472:	602b      	str	r3, [r5, #0]
 8001474:	f7ff f816 	bl	80004a4 <_sbrk>
 8001478:	1c43      	adds	r3, r0, #1
 800147a:	d102      	bne.n	8001482 <_sbrk_r+0x1a>
 800147c:	682b      	ldr	r3, [r5, #0]
 800147e:	b103      	cbz	r3, 8001482 <_sbrk_r+0x1a>
 8001480:	6023      	str	r3, [r4, #0]
 8001482:	bd38      	pop	{r3, r4, r5, pc}
 8001484:	200001b8 	.word	0x200001b8

08001488 <_init>:
 8001488:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800148a:	bf00      	nop
 800148c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800148e:	bc08      	pop	{r3}
 8001490:	469e      	mov	lr, r3
 8001492:	4770      	bx	lr

08001494 <_fini>:
 8001494:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001496:	bf00      	nop
 8001498:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800149a:	bc08      	pop	{r3}
 800149c:	469e      	mov	lr, r3
 800149e:	4770      	bx	lr
